com/baidu/android/bbalbs/common/util/CommonParam = Com.Baidu.Android.Bbalbs.Common.Util.CommonParam
  <init>()V = .ctor()
  a(Landroid/content/Context;)Ljava/lang/String; = A(Android.Content.Context)
com/baidu/lbsapi/auth/LBSAuthManager = Com.Baidu.Lbsapi.Auth.LBSAuthManager
  CODE_AUTHENTICATE_SUCC = CodeAuthenticateSucc
  CODE_AUTHENTICATING = CodeAuthenticating
  CODE_INNER_ERROR = CodeInnerError
  CODE_KEY_NOT_EXIST = CodeKeyNotExist
  CODE_NETWORK_FAILED = CodeNetworkFailed
  CODE_NETWORK_INVALID = CodeNetworkInvalid
  CODE_UNAUTHENTICATE = CodeUnauthenticate
  VERSION = Version
  getCUID()Ljava/lang/String; = CUID
  getKey()Ljava/lang/String; = Key
  getMCode()Ljava/lang/String; = MCode
  authenticate(ZLjava/lang/String;Ljava/util/Hashtable;Lcom/baidu/lbsapi/auth/LBSAuthManagerListener;)I = Authenticate(bool, string, Java.Util.Hashtable, Com.Baidu.Lbsapi.Auth.ILBSAuthManagerListener)
  getInstance(Landroid/content/Context;)Lcom/baidu/lbsapi/auth/LBSAuthManager; = GetInstance(Android.Content.Context)
  getPublicKey(Landroid/content/Context;)Ljava/lang/String; = GetPublicKey(Android.Content.Context)
com/baidu/lbsapi/auth/LBSAuthManagerListener = Com.Baidu.Lbsapi.Auth.ILBSAuthManagerListener
  onAuthResult(ILjava/lang/String;)V = OnAuthResult(int, string)
com/baidu/location/Address = Com.Baidu.Location.Address
  AddressInfo = AddressInfo
  city = City
  cityCode = CityCode
  country = Country
  countryCode = CountryCode
  district = District
  province = Province
  street = Street
  streetNumber = StreetNumber
com/baidu/location/BDLocation = Com.Baidu.Location.BDLocation
  <init>()V = .ctor()
  <init>(Lcom/baidu/location/BDLocation;)V = .ctor(Com.Baidu.Location.BDLocation)
  <init>(Ljava/lang/String;)V = .ctor(string)
  BDLOCATION_BD09LL_TO_GCJ02 = BdlocationBd09llToGcj02
  BDLOCATION_BD09_TO_GCJ02 = BdlocationBd09ToGcj02
  BDLOCATION_GCJ02_TO_BD09 = BdlocationGcj02ToBd09
  BDLOCATION_GCJ02_TO_BD09LL = BdlocationGcj02ToBd09ll
  BDLOCATION_WGS84_TO_GCJ02 = BdlocationWgs84ToGcj02
  CREATOR = Creator
  GPS_ACCURACY_BAD = GpsAccuracyBad
  GPS_ACCURACY_GOOD = GpsAccuracyGood
  GPS_ACCURACY_MID = GpsAccuracyMid
  GPS_ACCURACY_UNKNOWN = GpsAccuracyUnknown
  INDOOR_LOCATION_NEARBY_SURPPORT_TRUE = IndoorLocationNearbySurpportTrue
  INDOOR_LOCATION_SOURCE_BLUETOOTH = IndoorLocationSourceBluetooth
  INDOOR_LOCATION_SOURCE_MAGNETIC = IndoorLocationSourceMagnetic
  INDOOR_LOCATION_SOURCE_SMALLCELLSTATION = IndoorLocationSourceSmallcellstation
  INDOOR_LOCATION_SOURCE_UNKNOWN = IndoorLocationSourceUnknown
  INDOOR_LOCATION_SOURCE_WIFI = IndoorLocationSourceWifi
  INDOOR_LOCATION_SURPPORT_FALSE = IndoorLocationSurpportFalse
  INDOOR_LOCATION_SURPPORT_TRUE = IndoorLocationSurpportTrue
  INDOOR_NETWORK_STATE_HIGH = IndoorNetworkStateHigh
  INDOOR_NETWORK_STATE_LOW = IndoorNetworkStateLow
  INDOOR_NETWORK_STATE_MIDDLE = IndoorNetworkStateMiddle
  LOCATION_WHERE_IN_CN = LocationWhereInCn
  LOCATION_WHERE_OUT_CN = LocationWhereOutCn
  LOCATION_WHERE_UNKNOW = LocationWhereUnknow
  OPERATORS_TYPE_MOBILE = OperatorsTypeMobile
  OPERATORS_TYPE_TELECOMU = OperatorsTypeTelecomu
  OPERATORS_TYPE_UNICOM = OperatorsTypeUnicom
  OPERATORS_TYPE_UNKONW = OperatorsTypeUnkonw
  TypeCacheLocation = TypeCacheLocation
  TypeCriteriaException = TypeCriteriaException
  TypeGpsLocation = TypeGpsLocation
  TypeNetWorkException = TypeNetWorkException
  TypeNetWorkLocation = TypeNetWorkLocation
  TypeNone = TypeNone
  TypeOffLineLocation = TypeOffLineLocation
  TypeOffLineLocationFail = TypeOffLineLocationFail
  TypeOffLineLocationNetworkFail = TypeOffLineLocationNetworkFail
  TypeServerCheckKeyError = TypeServerCheckKeyError
  TypeServerDecryptError = TypeServerDecryptError
  TypeServerError = TypeServerError
  USER_INDDOR_TRUE = UserInddorTrue
  USER_INDOOR_FALSE = UserIndoorFalse
  USER_INDOOR_UNKNOW = UserIndoorUnknow
  getAddress()Lcom/baidu/location/Address; = Address
  getAddrStr()Ljava/lang/String; = AddrStr
  setAddrStr(Ljava/lang/String;)V = AddrStr
  getAltitude()D = Altitude
  setAltitude(D)V = Altitude
  getBuildingID()Ljava/lang/String; = BuildingID
  setBuildingID(Ljava/lang/String;)V = BuildingID
  getBuildingName()Ljava/lang/String; = BuildingName
  setBuildingName(Ljava/lang/String;)V = BuildingName
  getCity()Ljava/lang/String; = City
  getCityCode()Ljava/lang/String; = CityCode
  getCoorType()Ljava/lang/String; = CoorType
  setCoorType(Ljava/lang/String;)V = CoorType
  getCountry()Ljava/lang/String; = Country
  getCountryCode()Ljava/lang/String; = CountryCode
  getDerect()F = Derect
  getDirection()F = Direction
  setDirection(F)V = Direction
  getDistrict()Ljava/lang/String; = District
  getFloor()Ljava/lang/String; = Floor
  setFloor(Ljava/lang/String;)V = Floor
  getGpsAccuracyStatus()I = GpsAccuracyStatus
  setGpsAccuracyStatus(I)V = GpsAccuracyStatus
  hasAddr()Z = HasAddr
  hasAltitude()Z = HasAltitude
  hasRadius()Z = HasRadius
  hasSateNumber()Z = HasSateNumber
  hasSpeed()Z = HasSpeed
  getIndoorLocationSource()I = IndoorLocationSource
  setIndoorLocationSource(I)V = IndoorLocationSource
  getIndoorLocationSurpport()I = IndoorLocationSurpport
  setIndoorLocationSurpport(I)V = IndoorLocationSurpport
  getIndoorLocationSurpportBuidlingID()Ljava/lang/String; = IndoorLocationSurpportBuidlingID
  getIndoorLocationSurpportBuidlingName()Ljava/lang/String; = IndoorLocationSurpportBuidlingName
  isIndoorLocMode()Z = IndoorLocMode
  setIndoorLocMode(Z)V = IndoorLocMode
  getIndoorNetworkState()I = IndoorNetworkState
  setIndoorNetworkState(I)V = IndoorNetworkState
  getIndoorSurpportPolygon()Ljava/lang/String; = IndoorSurpportPolygon
  setIndoorSurpportPolygon(Ljava/lang/String;)V = IndoorSurpportPolygon
  isCellChangeFlag()Z = IsCellChangeFlag
  getLatitude()D = Latitude
  setLatitude(D)V = Latitude
  getLocationDescribe()Ljava/lang/String; = LocationDescribe
  setLocationDescribe(Ljava/lang/String;)V = LocationDescribe
  getLocationWhere()I = LocationWhere
  setLocationWhere(I)V = LocationWhere
  getLocType()I = LocType
  setLocType(I)V = LocType
  getLocTypeDescription()Ljava/lang/String; = LocTypeDescription
  setLocTypeDescription(Ljava/lang/String;)V = LocTypeDescription
  getLongitude()D = Longitude
  setLongitude(D)V = Longitude
  getNetworkLocationType()Ljava/lang/String; = NetworkLocationType
  setNetworkLocationType(Ljava/lang/String;)V = NetworkLocationType
  getOperators()I = Operators
  setOperators(I)V = Operators
  getPoiList()Ljava/util/List; = PoiList
  setPoiList(Ljava/util/List;)V = PoiList
  getProvince()Ljava/lang/String; = Province
  getRadius()F = Radius
  setRadius(F)V = Radius
  getSatelliteNumber()I = SatelliteNumber
  setSatelliteNumber(I)V = SatelliteNumber
  getSemaAptag()Ljava/lang/String; = SemaAptag
  getSpeed()F = Speed
  setSpeed(F)V = Speed
  getStreet()Ljava/lang/String; = Street
  getStreetNumber()Ljava/lang/String; = StreetNumber
  getTime()Ljava/lang/String; = Time
  setTime(Ljava/lang/String;)V = Time
  getUserIndoorState()I = UserIndoorState
  setUserIndoorState(I)V = UserIndoorState
  describeContents()I = DescribeContents()
  isParkAvailable()I = IsParkAvailable()
  setAddr(Lcom/baidu/location/Address;)V = SetAddr(Com.Baidu.Location.Address)
  setParkAvailable(I)V = SetParkAvailable(int)
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/baidu/location/BDLocationListener = Com.Baidu.Location.IBDLocationListener
  onConnectHotSpotMessage(Ljava/lang/String;I)V = OnConnectHotSpotMessage(string, int)
  onReceiveLocation(Lcom/baidu/location/BDLocation;)V = OnReceiveLocation(Com.Baidu.Location.BDLocation)
com/baidu/location/BDNotifyListener = Com.Baidu.Location.BDNotifyListener
  <init>()V = .ctor()
  differDistance = DifferDistance
  isAdded = IsAdded
  mCoorType = MCoorType
  mLatitude = MLatitude
  mLatitudeC = MLatitudeC
  mLongitude = MLongitude
  mLongitudeC = MLongitudeC
  mRadius = MRadius
  Notified = Notified
  onNotify(Lcom/baidu/location/BDLocation;F)V = OnNotify(Com.Baidu.Location.BDLocation, float)
  SetNotifyLocation(DDFLjava/lang/String;)V = SetNotifyLocation(double, double, float, string)
com/baidu/location/Jni = Com.Baidu.Location.Jni
  <init>()V = .ctor()
  getSkyKey()Ljava/lang/String; = SkyKey
  coorEncrypt(DDLjava/lang/String;)[D = CoorEncrypt(double, double, string)
  decodeIBeacon([B[B)Ljava/lang/String; = DecodeIBeacon(byte[], byte[])
  en1(Ljava/lang/String;)Ljava/lang/String; = En1(string)
  encode(Ljava/lang/String;)Ljava/lang/String; = Encode(string)
  encode2(Ljava/lang/String;)Ljava/lang/String; = Encode2(string)
  encode3(Ljava/lang/String;)Ljava/lang/Long; = Encode3(string)
  encodeOfflineLocationUpdateRequest(Ljava/lang/String;)Ljava/lang/String; = EncodeOfflineLocationUpdateRequest(string)
  encodeTp4(Ljava/lang/String;)Ljava/lang/String; = EncodeTp4(string)
  getGpsSwiftRadius(FDD)D = GetGpsSwiftRadius(float, double, double)
  gtr2(Ljava/lang/String;)Ljava/lang/String; = Gtr2(string)
  removeSoList(ILjava/lang/String;)V = RemoveSoList(int, string)
  tr2(Ljava/lang/String;Ljava/lang/String;)V = Tr2(string, string)
  uninstall(Ljava/lang/String;)V = Uninstall(string)
com/baidu/location/LLSInterface = Com.Baidu.Location.ILLSInterface
  getVersion()D = Version
  onBind(Landroid/content/Intent;)Landroid/os/IBinder; = OnBind(Android.Content.Intent)
  onCreate(Landroid/content/Context;)V = OnCreate(Android.Content.Context)
  onDestroy()V = OnDestroy()
  onStartCommand(Landroid/content/Intent;II)I = OnStartCommand(Android.Content.Intent, int, int)
  onUnBind(Landroid/content/Intent;)Z = OnUnBind(Android.Content.Intent)
com/baidu/location/LocationClient = Com.Baidu.Location.LocationClient
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Landroid/content/Context;Lcom/baidu/location/LocationClientOption;)V = .ctor(Android.Content.Context, Com.Baidu.Location.LocationClientOption)
  CONNECT_HOT_SPOT_FALSE = ConnectHotSpotFalse
  CONNECT_HOT_SPOT_TRUE = ConnectHotSpotTrue
  CONNECT_HOT_SPOT_UNKNOWN = ConnectHotSpotUnknown
  getAccessKey()Ljava/lang/String; = AccessKey
  isStarted()Z = IsStarted
  getLastKnownLocation()Lcom/baidu/location/BDLocation; = LastKnownLocation
  getLocOption()Lcom/baidu/location/LocationClientOption; = LocOption
  setLocOption(Lcom/baidu/location/LocationClientOption;)V = LocOption
  getVersion()Ljava/lang/String; = Version
  getBDLocationInCoorType(Lcom/baidu/location/BDLocation;Ljava/lang/String;)Lcom/baidu/location/BDLocation; = GetBDLocationInCoorType(Com.Baidu.Location.BDLocation, string)
  onReceiveLocation(Lcom/baidu/location/BDLocation;)V = OnReceiveLocation(Com.Baidu.Location.BDLocation)
  registerLocationListener(Lcom/baidu/location/BDLocationListener;)V = RegisterLocationListener(Com.Baidu.Location.IBDLocationListener)
  registerNotify(Lcom/baidu/location/BDNotifyListener;)V = RegisterNotify(Com.Baidu.Location.BDNotifyListener)
  registerNotifyLocationListener(Lcom/baidu/location/BDLocationListener;)V = RegisterNotifyLocationListener(Com.Baidu.Location.IBDLocationListener)
  removeNotifyEvent(Lcom/baidu/location/BDNotifyListener;)V = RemoveNotifyEvent(Com.Baidu.Location.BDNotifyListener)
  requestHotSpotState()Z = RequestHotSpotState()
  requestLocation()I = RequestLocation()
  requestNotifyLocation()V = RequestNotifyLocation()
  requestOfflineLocation()I = RequestOfflineLocation()
  start()V = Start()
  startIndoorMode()Z = StartIndoorMode()
  stop()V = Stop()
  stopIndoorMode()Z = StopIndoorMode()
  unRegisterLocationListener(Lcom/baidu/location/BDLocationListener;)V = UnRegisterLocationListener(Com.Baidu.Location.IBDLocationListener)
  updateLocation(Landroid/location/Location;)Z = UpdateLocation(Android.Locations.Location)
com/baidu/location/LocationClientOption = Com.Baidu.Location.LocationClientOption
  <init>()V = .ctor()
  <init>(Lcom/baidu/location/LocationClientOption;)V = .ctor(Com.Baidu.Location.LocationClientOption)
  addrType = AddrType
  autoNotifyLocSensitivity = AutoNotifyLocSensitivity
  autoNotifyMaxInterval = AutoNotifyMaxInterval
  autoNotifyMinDistance = AutoNotifyMinDistance
  autoNotifyMinTimeInterval = AutoNotifyMinTimeInterval
  coorType = CoorType
  disableLocCache = DisableLocCache
  enableSimulateGps = EnableSimulateGps
  GpsFirst = GpsFirst
  GpsOnly = GpsOnly
  isIgnoreCacheException = IsIgnoreCacheException
  isIgnoreKillProcess = IsIgnoreKillProcess
  isNeedAltitude = IsNeedAltitude
  isNeedAptag = IsNeedAptag
  isNeedAptagd = IsNeedAptagd
  isNeedPoiRegion = IsNeedPoiRegion
  isNeedRegular = IsNeedRegular
  location_change_notify = LocationChangeNotify
  LOC_SENSITIVITY_HIGHT = LocSensitivityHight
  LOC_SENSITIVITY_LOW = LocSensitivityLow
  LOC_SENSITIVITY_MIDDLE = LocSensitivityMiddle
  MIN_AUTO_NOTIFY_INTERVAL = MinAutoNotifyInterval
  MIN_SCAN_SPAN = MinScanSpan
  mIsNeedDeviceDirect = MIsNeedDeviceDirect
  mLocationMode = MLocationMode
  NetWorkFirst = NetWorkFirst
  openGps = OpenGps
  priority = Priority
  prodName = ProdName
  scanSpan = ScanSpan
  serviceName = ServiceName
  timeOut = TimeOut
  getAddrType()Ljava/lang/String; = AddrType
  setAddrType(Ljava/lang/String;)V = AddrType
  getAutoNotifyMinDistance()I = AutoNotifyMinDistance
  getAutoNotifyMinTimeInterval()I = AutoNotifyMinTimeInterval
  getCoorType()Ljava/lang/String; = CoorType
  setCoorType(Ljava/lang/String;)V = CoorType
  isDisableCache()Z = IsDisableCache
  isLocationNotify()Z = LocationNotify
  setLocationNotify(Z)V = LocationNotify
  isOpenGps()Z = OpenGps
  setOpenGps(Z)V = OpenGps
  getPriority()I = Priority
  setPriority(I)V = Priority
  getProdName()Ljava/lang/String; = ProdName
  setProdName(Ljava/lang/String;)V = ProdName
  getScanSpan()I = ScanSpan
  setScanSpan(I)V = ScanSpan
  getServiceName()Ljava/lang/String; = ServiceName
  setServiceName(Ljava/lang/String;)V = ServiceName
  getTimeOut()I = TimeOut
  setTimeOut(I)V = TimeOut
  disableCache(Z)V = DisableCache(bool)
  getLocationMode()Lcom/baidu/location/LocationClientOption$LocationMode; = GetLocationMode()
  optionEquals(Lcom/baidu/location/LocationClientOption;)Z = OptionEquals(Com.Baidu.Location.LocationClientOption)
  setEnableSimulateGps(Z)V = SetEnableSimulateGps(bool)
  SetIgnoreCacheException(Z)V = SetIgnoreCacheException(bool)
  setIgnoreKillProcess(Z)V = SetIgnoreKillProcess(bool)
  setIsNeedAddress(Z)V = SetIsNeedAddress(bool)
  setIsNeedAltitude(Z)V = SetIsNeedAltitude(bool)
  setIsNeedLocationDescribe(Z)V = SetIsNeedLocationDescribe(bool)
  setIsNeedLocationPoiList(Z)V = SetIsNeedLocationPoiList(bool)
  setLocationMode(Lcom/baidu/location/LocationClientOption$LocationMode;)V = SetLocationMode(Com.Baidu.Location.LocationClientOption.LocationMode)
  setNeedDeviceDirect(Z)V = SetNeedDeviceDirect(bool)
  setOpenAutoNotifyMode()V = SetOpenAutoNotifyMode()
  setOpenAutoNotifyMode(III)V = SetOpenAutoNotifyMode(int, int, int)
  setSema(ZZZ)V = SetSema(bool, bool, bool)
com/baidu/location/Poi = Com.Baidu.Location.Poi
  <init>(Ljava/lang/String;Ljava/lang/String;D)V = .ctor(string, string, double)
  CREATOR = Creator
  getId()Ljava/lang/String; = Id
  getName()Ljava/lang/String; = Name
  getRank()D = Rank
  describeContents()I = DescribeContents()
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/baidu/mapapi/BMapManager = Com.Baidu.Mapapi.BMapManager
  <init>()V = .ctor()
  getContext()Landroid/content/Context; = Context
  destroy()V = Destroy()
  init()V = Init()
com/baidu/mapapi/common/AppTools = Com.Baidu.Mapapi.Common.AppTools
  <init>()V = .ctor()
  getBaiduMapToken()Ljava/lang/String; = BaiduMapToken
com/baidu/mapapi/common/BaiduMapSDKException = Com.Baidu.Mapapi.Common.BaiduMapSDKException
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
com/baidu/mapapi/common/EnvironmentUtilities = Com.Baidu.Mapapi.Common.EnvironmentUtilities
  <init>()V = .ctor()
  getAppCachePath()Ljava/lang/String; = AppCachePath
  getAppSDCardPath()Ljava/lang/String; = AppSDCardPath
  getAppSecondCachePath()Ljava/lang/String; = AppSecondCachePath
  getDomTmpStgMax()I = DomTmpStgMax
  getItsTmpStgMax()I = ItsTmpStgMax
  getMapTmpStgMax()I = MapTmpStgMax
  getSDCardPath()Ljava/lang/String; = SDCardPath
  setSDCardPath(Ljava/lang/String;)V = SDCardPath
  initAppDirectory(Landroid/content/Context;)V = InitAppDirectory(Android.Content.Context)
com/baidu/mapapi/common/Logger = Com.Baidu.Mapapi.Common.Logger
  <init>()V = .ctor()
  debugEnable()Z = DebugEnable()
  logD(Ljava/lang/String;Ljava/lang/String;)V = LogD(string, string)
  logE(Ljava/lang/String;Ljava/lang/String;)V = LogE(string, string)
  logI(Ljava/lang/String;Ljava/lang/String;)V = LogI(string, string)
  logV(Ljava/lang/String;Ljava/lang/String;)V = LogV(string, string)
  logW(Ljava/lang/String;Ljava/lang/String;)V = LogW(string, string)
com/baidu/mapapi/common/SysOSUtil = Com.Baidu.Mapapi.Common.SysOSUtil
  <init>()V = .ctor()
  getDensity()F = Density
  getDensityDpi()I = DensityDpi
  getDeviceID()Ljava/lang/String; = DeviceID
  getModuleFileName()Ljava/lang/String; = ModuleFileName
  getPhoneType()Ljava/lang/String; = PhoneType
  getScreenSizeX()I = ScreenSizeX
  getScreenSizeY()I = ScreenSizeY
com/baidu/mapapi/favorite/FavoriteManager = Com.Baidu.Mapapi.Favorite.FavoriteManager
  getAllFavPois()Ljava/util/List; = AllFavPois
  getInstance()Lcom/baidu/mapapi/favorite/FavoriteManager; = Instance
  add(Lcom/baidu/mapapi/favorite/FavoritePoiInfo;)I = Add(Com.Baidu.Mapapi.Favorite.FavoritePoiInfo)
  clearAllFavPois()Z = ClearAllFavPois()
  deleteFavPoi(Ljava/lang/String;)Z = DeleteFavPoi(string)
  destroy()V = Destroy()
  getFavPoi(Ljava/lang/String;)Lcom/baidu/mapapi/favorite/FavoritePoiInfo; = GetFavPoi(string)
  init()V = Init()
  updateFavPoi(Ljava/lang/String;Lcom/baidu/mapapi/favorite/FavoritePoiInfo;)Z = UpdateFavPoi(string, Com.Baidu.Mapapi.Favorite.FavoritePoiInfo)
com/baidu/mapapi/favorite/FavoritePoiInfo = Com.Baidu.Mapapi.Favorite.FavoritePoiInfo
  <init>()V = .ctor()
  getAddr()Ljava/lang/String; = Addr
  getCityName()Ljava/lang/String; = CityName
  getID()Ljava/lang/String; = ID
  getPoiName()Ljava/lang/String; = PoiName
  getPt()Lcom/baidu/mapapi/model/LatLng; = Pt
  getTimeStamp()J = TimeStamp
  getUid()Ljava/lang/String; = Uid
  addr(Ljava/lang/String;)Lcom/baidu/mapapi/favorite/FavoritePoiInfo; = InvokeAddr(string)
  cityName(Ljava/lang/String;)Lcom/baidu/mapapi/favorite/FavoritePoiInfo; = InvokeCityName(string)
  poiName(Ljava/lang/String;)Lcom/baidu/mapapi/favorite/FavoritePoiInfo; = InvokePoiName(string)
  pt(Lcom/baidu/mapapi/model/LatLng;)Lcom/baidu/mapapi/favorite/FavoritePoiInfo; = InvokePt(Com.Baidu.Mapapi.Model.LatLng)
  uid(Ljava/lang/String;)Lcom/baidu/mapapi/favorite/FavoritePoiInfo; = InvokeUid(string)
com/baidu/mapapi/http/AsyncHttpClient = Com.Baidu.Mapapi.Http.AsyncHttpClient
  <init>()V = .ctor()
  isAuthorized()Z = IsAuthorized
  get(Ljava/lang/String;Lcom/baidu/mapapi/http/HttpClient$ProtoResultCallback;)V = Get(string, Com.Baidu.Mapapi.Http.HttpClient.ProtoResultCallback)
com/baidu/mapapi/http/HttpClient = Com.Baidu.Mapapi.Http.HttpClient
  <init>(Ljava/lang/String;Lcom/baidu/mapapi/http/HttpClient$ProtoResultCallback;)V = .ctor(string, Com.Baidu.Mapapi.Http.HttpClient.ProtoResultCallback)
  getAuthToken()Ljava/lang/String; = AuthToken
  getPhoneInfo()Ljava/lang/String; = PhoneInfo
  checkNetwork()Z = CheckNetwork()
  request(Ljava/lang/String;)V = Request(string)
  setMaxTimeOut(I)V = SetMaxTimeOut(int)
  setReadTimeOut(I)V = SetReadTimeOut(int)
com/baidu/mapapi/JNIInitializer = Com.Baidu.Mapapi.JNIInitializer
  <init>()V = .ctor()
  getCachedContext()Landroid/content/Context; = CachedContext
  setContext(Landroid/app/Application;)V = SetContext(Android.App.Application)
com/baidu/mapapi/map/Arc = Com.Baidu.Mapapi.Map.Arc
  getColor()I = Color
  setColor(I)V = Color
  getEndPoint()Lcom/baidu/mapapi/model/LatLng; = EndPoint
  getMiddlePoint()Lcom/baidu/mapapi/model/LatLng; = MiddlePoint
  getStartPoint()Lcom/baidu/mapapi/model/LatLng; = StartPoint
  getWidth()I = Width
  setWidth(I)V = Width
  setPoints(Lcom/baidu/mapapi/model/LatLng;Lcom/baidu/mapapi/model/LatLng;Lcom/baidu/mapapi/model/LatLng;)V = SetPoints(Com.Baidu.Mapapi.Model.LatLng, Com.Baidu.Mapapi.Model.LatLng, Com.Baidu.Mapapi.Model.LatLng)
com/baidu/mapapi/map/ArcOptions = Com.Baidu.Mapapi.Map.ArcOptions
  <init>()V = .ctor()
  getColor()I = Color
  getEndPoint()Lcom/baidu/mapapi/model/LatLng; = EndPoint
  getExtraInfo()Landroid/os/Bundle; = ExtraInfo
  isVisible()Z = IsVisible
  getMiddlePoint()Lcom/baidu/mapapi/model/LatLng; = MiddlePoint
  getStartPoint()Lcom/baidu/mapapi/model/LatLng; = StartPoint
  getWidth()I = Width
  getZIndex()I = ZIndex
  color(I)Lcom/baidu/mapapi/map/ArcOptions; = InvokeColor(int)
  extraInfo(Landroid/os/Bundle;)Lcom/baidu/mapapi/map/ArcOptions; = InvokeExtraInfo(Android.OS.Bundle)
  width(I)Lcom/baidu/mapapi/map/ArcOptions; = InvokeWidth(int)
  zIndex(I)Lcom/baidu/mapapi/map/ArcOptions; = InvokeZIndex(int)
  points(Lcom/baidu/mapapi/model/LatLng;Lcom/baidu/mapapi/model/LatLng;Lcom/baidu/mapapi/model/LatLng;)Lcom/baidu/mapapi/map/ArcOptions; = Points(Com.Baidu.Mapapi.Model.LatLng, Com.Baidu.Mapapi.Model.LatLng, Com.Baidu.Mapapi.Model.LatLng)
  visible(Z)Lcom/baidu/mapapi/map/ArcOptions; = Visible(bool)
com/baidu/mapapi/map/BaiduMap = Com.Baidu.Mapapi.Map.BaiduMap
  MAP_TYPE_NONE = MapTypeNone
  MAP_TYPE_NORMAL = MapTypeNormal
  MAP_TYPE_SATELLITE = MapTypeSatellite
  isBaiduHeatMapEnabled()Z = BaiduHeatMapEnabled
  setBaiduHeatMapEnabled(Z)V = BaiduHeatMapEnabled
  isBuildingsEnabled()Z = BuildingsEnabled
  setBuildingsEnabled(Z)V = BuildingsEnabled
  getCompassPosition()Landroid/graphics/Point; = CompassPosition
  setCompassPosition(Landroid/graphics/Point;)V = CompassPosition
  getFocusedBaseIndoorMapInfo()Lcom/baidu/mapapi/map/MapBaseIndoorMapInfo; = FocusedBaseIndoorMapInfo
  isBaseIndoorMapMode()Z = IsBaseIndoorMapMode
  isSupportBaiduHeatMap()Z = IsSupportBaiduHeatMap
  getLocationConfigeration()Lcom/baidu/mapapi/map/MyLocationConfiguration; = LocationConfigeration
  getLocationData()Lcom/baidu/mapapi/map/MyLocationData; = LocationData
  getMapStatus()Lcom/baidu/mapapi/map/MapStatus; = MapStatus
  getMapStatusLimit()Lcom/baidu/mapapi/model/LatLngBounds; = MapStatusLimit
  getMapType()I = MapType
  setMapType(I)V = MapType
  getMaxZoomLevel()F = MaxZoomLevel
  getMinZoomLevel()F = MinZoomLevel
  isMyLocationEnabled()Z = MyLocationEnabled
  setMyLocationEnabled(Z)V = MyLocationEnabled
  getProjection()Lcom/baidu/mapapi/map/Projection; = Projection
  isTrafficEnabled()Z = TrafficEnabled
  setTrafficEnabled(Z)V = TrafficEnabled
  getUiSettings()Lcom/baidu/mapapi/map/UiSettings; = UiSettings
  addHeatMap(Lcom/baidu/mapapi/map/HeatMap;)V = AddHeatMap(Com.Baidu.Mapapi.Map.HeatMap)
  addOverlay(Lcom/baidu/mapapi/map/OverlayOptions;)Lcom/baidu/mapapi/map/Overlay; = AddOverlay(Com.Baidu.Mapapi.Map.OverlayOptions)
  addOverlays(Ljava/util/List;)Ljava/util/List; = AddOverlays(System.Collections.Generic.IList<Com.Baidu.Mapapi.Map.OverlayOptions>)
  addTileLayer(Lcom/baidu/mapapi/map/TileOverlayOptions;)Lcom/baidu/mapapi/map/TileOverlay; = AddTileLayer(Com.Baidu.Mapapi.Map.TileOverlayOptions)
  animateMapStatus(Lcom/baidu/mapapi/map/MapStatusUpdate;)V = AnimateMapStatus(Com.Baidu.Mapapi.Map.MapStatusUpdate)
  animateMapStatus(Lcom/baidu/mapapi/map/MapStatusUpdate;I)V = AnimateMapStatus(Com.Baidu.Mapapi.Map.MapStatusUpdate, int)
  clear()V = Clear()
  getMarkersInBounds(Lcom/baidu/mapapi/model/LatLngBounds;)Ljava/util/List; = GetMarkersInBounds(Com.Baidu.Mapapi.Model.LatLngBounds)
  hideInfoWindow()V = HideInfoWindow()
  removeMarkerClickListener(Lcom/baidu/mapapi/map/BaiduMap$OnMarkerClickListener;)V = RemoveMarkerClickListener(Com.Baidu.Mapapi.Map.BaiduMap.IOnMarkerClickListener)
  setCompassIcon(Landroid/graphics/Bitmap;)V = SetCompassIcon(Android.Graphics.Bitmap)
  setIndoorEnable(Z)V = SetIndoorEnable(bool)
  setMapStatus(Lcom/baidu/mapapi/map/MapStatusUpdate;)V = SetMapStatus(Com.Baidu.Mapapi.Map.MapStatusUpdate)
  setMapStatusLimits(Lcom/baidu/mapapi/model/LatLngBounds;)V = SetMapStatusLimits(Com.Baidu.Mapapi.Model.LatLngBounds)
  setMaxAndMinZoomLevel(FF)V = SetMaxAndMinZoomLevel(float, float)
  setMyLocationConfigeration(Lcom/baidu/mapapi/map/MyLocationConfiguration;)V = SetMyLocationConfigeration(Com.Baidu.Mapapi.Map.MyLocationConfiguration)
  setMyLocationData(Lcom/baidu/mapapi/map/MyLocationData;)V = SetMyLocationData(Com.Baidu.Mapapi.Map.MyLocationData)
  setOnBaseIndoorMapListener(Lcom/baidu/mapapi/map/BaiduMap$OnBaseIndoorMapListener;)V = SetOnBaseIndoorMapListener(Com.Baidu.Mapapi.Map.BaiduMap.IOnBaseIndoorMapListener)
  setOnMapClickListener(Lcom/baidu/mapapi/map/BaiduMap$OnMapClickListener;)V = SetOnMapClickListener(Com.Baidu.Mapapi.Map.BaiduMap.IOnMapClickListener)
  setOnMapDoubleClickListener(Lcom/baidu/mapapi/map/BaiduMap$OnMapDoubleClickListener;)V = SetOnMapDoubleClickListener(Com.Baidu.Mapapi.Map.BaiduMap.IOnMapDoubleClickListener)
  setOnMapDrawFrameCallback(Lcom/baidu/mapapi/map/BaiduMap$OnMapDrawFrameCallback;)V = SetOnMapDrawFrameCallback(Com.Baidu.Mapapi.Map.BaiduMap.IOnMapDrawFrameCallback)
  setOnMapLoadedCallback(Lcom/baidu/mapapi/map/BaiduMap$OnMapLoadedCallback;)V = SetOnMapLoadedCallback(Com.Baidu.Mapapi.Map.BaiduMap.IOnMapLoadedCallback)
  setOnMapLongClickListener(Lcom/baidu/mapapi/map/BaiduMap$OnMapLongClickListener;)V = SetOnMapLongClickListener(Com.Baidu.Mapapi.Map.BaiduMap.IOnMapLongClickListener)
  setOnMapRenderCallbadk(Lcom/baidu/mapapi/map/BaiduMap$OnMapRenderCallback;)V = SetOnMapRenderCallbadk(Com.Baidu.Mapapi.Map.BaiduMap.IOnMapRenderCallback)
  setOnMapStatusChangeListener(Lcom/baidu/mapapi/map/BaiduMap$OnMapStatusChangeListener;)V = SetOnMapStatusChangeListener(Com.Baidu.Mapapi.Map.BaiduMap.IOnMapStatusChangeListener)
  setOnMapTouchListener(Lcom/baidu/mapapi/map/BaiduMap$OnMapTouchListener;)V = SetOnMapTouchListener(Com.Baidu.Mapapi.Map.BaiduMap.IOnMapTouchListener)
  setOnMarkerClickListener(Lcom/baidu/mapapi/map/BaiduMap$OnMarkerClickListener;)V = SetOnMarkerClickListener(Com.Baidu.Mapapi.Map.BaiduMap.IOnMarkerClickListener)
  setOnMarkerDragListener(Lcom/baidu/mapapi/map/BaiduMap$OnMarkerDragListener;)V = SetOnMarkerDragListener(Com.Baidu.Mapapi.Map.BaiduMap.IOnMarkerDragListener)
  setOnMyLocationClickListener(Lcom/baidu/mapapi/map/BaiduMap$OnMyLocationClickListener;)V = SetOnMyLocationClickListener(Com.Baidu.Mapapi.Map.BaiduMap.IOnMyLocationClickListener)
  setOnPolylineClickListener(Lcom/baidu/mapapi/map/BaiduMap$OnPolylineClickListener;)V = SetOnPolylineClickListener(Com.Baidu.Mapapi.Map.BaiduMap.IOnPolylineClickListener)
  setPadding(IIII)V = SetPadding(int, int, int, int)
  setViewPadding(IIII)V = SetViewPadding(int, int, int, int)
  showInfoWindow(Lcom/baidu/mapapi/map/InfoWindow;)V = ShowInfoWindow(Com.Baidu.Mapapi.Map.InfoWindow)
  showMapIndoorPoi(Z)V = ShowMapIndoorPoi(bool)
  showMapPoi(Z)V = ShowMapPoi(bool)
  snapshot(Lcom/baidu/mapapi/map/BaiduMap$SnapshotReadyCallback;)V = Snapshot(Com.Baidu.Mapapi.Map.BaiduMap.ISnapshotReadyCallback)
  snapshotScope(Landroid/graphics/Rect;Lcom/baidu/mapapi/map/BaiduMap$SnapshotReadyCallback;)V = SnapshotScope(Android.Graphics.Rect, Com.Baidu.Mapapi.Map.BaiduMap.ISnapshotReadyCallback)
  switchBaseIndoorMapFloor(Ljava/lang/String;Ljava/lang/String;)Lcom/baidu/mapapi/map/MapBaseIndoorMapInfo$SwitchFloorError; = SwitchBaseIndoorMapFloor(string, string)
com/baidu/mapapi/map/BaiduMapOptions = Com.Baidu.Mapapi.Map.BaiduMapOptions
  <init>()V = .ctor()
  <init>(Landroid/os/Parcel;)V = .ctor(Android.OS.Parcel)
  CREATOR = Creator
  compassEnabled(Z)Lcom/baidu/mapapi/map/BaiduMapOptions; = CompassEnabled(bool)
  describeContents()I = DescribeContents()
  logoPosition(Lcom/baidu/mapapi/map/LogoPosition;)Lcom/baidu/mapapi/map/BaiduMapOptions; = LogoPosition(Com.Baidu.Mapapi.Map.LogoPosition)
  mapStatus(Lcom/baidu/mapapi/map/MapStatus;)Lcom/baidu/mapapi/map/BaiduMapOptions; = MapStatus(Com.Baidu.Mapapi.Map.MapStatus)
  mapType(I)Lcom/baidu/mapapi/map/BaiduMapOptions; = MapType(int)
  overlookingGesturesEnabled(Z)Lcom/baidu/mapapi/map/BaiduMapOptions; = OverlookingGesturesEnabled(bool)
  rotateGesturesEnabled(Z)Lcom/baidu/mapapi/map/BaiduMapOptions; = RotateGesturesEnabled(bool)
  scaleControlEnabled(Z)Lcom/baidu/mapapi/map/BaiduMapOptions; = ScaleControlEnabled(bool)
  scaleControlPosition(Landroid/graphics/Point;)Lcom/baidu/mapapi/map/BaiduMapOptions; = ScaleControlPosition(Android.Graphics.Point)
  scrollGesturesEnabled(Z)Lcom/baidu/mapapi/map/BaiduMapOptions; = ScrollGesturesEnabled(bool)
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
  zoomControlsEnabled(Z)Lcom/baidu/mapapi/map/BaiduMapOptions; = ZoomControlsEnabled(bool)
  zoomControlsPosition(Landroid/graphics/Point;)Lcom/baidu/mapapi/map/BaiduMapOptions; = ZoomControlsPosition(Android.Graphics.Point)
  zoomGesturesEnabled(Z)Lcom/baidu/mapapi/map/BaiduMapOptions; = ZoomGesturesEnabled(bool)
com/baidu/mapapi/map/BitmapDescriptor = Com.Baidu.Mapapi.Map.BitmapDescriptor
  getBitmap()Landroid/graphics/Bitmap; = Bitmap
  recycle()V = Recycle()
com/baidu/mapapi/map/BitmapDescriptorFactory = Com.Baidu.Mapapi.Map.BitmapDescriptorFactory
  <init>()V = .ctor()
  fromAsset(Ljava/lang/String;)Lcom/baidu/mapapi/map/BitmapDescriptor; = FromAsset(string)
  fromAssetWithDpi(Ljava/lang/String;)Lcom/baidu/mapapi/map/BitmapDescriptor; = FromAssetWithDpi(string)
  fromBitmap(Landroid/graphics/Bitmap;)Lcom/baidu/mapapi/map/BitmapDescriptor; = FromBitmap(Android.Graphics.Bitmap)
  fromFile(Ljava/lang/String;)Lcom/baidu/mapapi/map/BitmapDescriptor; = FromFile(string)
  fromPath(Ljava/lang/String;)Lcom/baidu/mapapi/map/BitmapDescriptor; = FromPath(string)
  fromResource(I)Lcom/baidu/mapapi/map/BitmapDescriptor; = FromResource(int)
  fromView(Landroid/view/View;)Lcom/baidu/mapapi/map/BitmapDescriptor; = FromView(Android.Views.View)
com/baidu/mapapi/map/Circle = Com.Baidu.Mapapi.Map.Circle
  getCenter()Lcom/baidu/mapapi/model/LatLng; = Center
  setCenter(Lcom/baidu/mapapi/model/LatLng;)V = Center
  getFillColor()I = FillColor
  setFillColor(I)V = FillColor
  getRadius()I = Radius
  setRadius(I)V = Radius
  getStroke()Lcom/baidu/mapapi/map/Stroke; = Stroke
  setStroke(Lcom/baidu/mapapi/map/Stroke;)V = Stroke
com/baidu/mapapi/map/CircleOptions = Com.Baidu.Mapapi.Map.CircleOptions
  <init>()V = .ctor()
  getCenter()Lcom/baidu/mapapi/model/LatLng; = Center
  getExtraInfo()Landroid/os/Bundle; = ExtraInfo
  getFillColor()I = FillColor
  isVisible()Z = IsVisible
  getRadius()I = Radius
  getStroke()Lcom/baidu/mapapi/map/Stroke; = Stroke
  getZIndex()I = ZIndex
  center(Lcom/baidu/mapapi/model/LatLng;)Lcom/baidu/mapapi/map/CircleOptions; = InvokeCenter(Com.Baidu.Mapapi.Model.LatLng)
  extraInfo(Landroid/os/Bundle;)Lcom/baidu/mapapi/map/CircleOptions; = InvokeExtraInfo(Android.OS.Bundle)
  fillColor(I)Lcom/baidu/mapapi/map/CircleOptions; = InvokeFillColor(int)
  radius(I)Lcom/baidu/mapapi/map/CircleOptions; = InvokeRadius(int)
  stroke(Lcom/baidu/mapapi/map/Stroke;)Lcom/baidu/mapapi/map/CircleOptions; = InvokeStroke(Com.Baidu.Mapapi.Map.Stroke)
  zIndex(I)Lcom/baidu/mapapi/map/CircleOptions; = InvokeZIndex(int)
  visible(Z)Lcom/baidu/mapapi/map/CircleOptions; = Visible(bool)
com/baidu/mapapi/map/Dot = Com.Baidu.Mapapi.Map.Dot
  getCenter()Lcom/baidu/mapapi/model/LatLng; = Center
  setCenter(Lcom/baidu/mapapi/model/LatLng;)V = Center
  getColor()I = Color
  setColor(I)V = Color
  getRadius()I = Radius
  setRadius(I)V = Radius
com/baidu/mapapi/map/DotOptions = Com.Baidu.Mapapi.Map.DotOptions
  <init>()V = .ctor()
  getCenter()Lcom/baidu/mapapi/model/LatLng; = Center
  getColor()I = Color
  getExtraInfo()Landroid/os/Bundle; = ExtraInfo
  isVisible()Z = IsVisible
  getRadius()I = Radius
  getZIndex()I = ZIndex
  center(Lcom/baidu/mapapi/model/LatLng;)Lcom/baidu/mapapi/map/DotOptions; = InvokeCenter(Com.Baidu.Mapapi.Model.LatLng)
  color(I)Lcom/baidu/mapapi/map/DotOptions; = InvokeColor(int)
  extraInfo(Landroid/os/Bundle;)Lcom/baidu/mapapi/map/DotOptions; = InvokeExtraInfo(Android.OS.Bundle)
  radius(I)Lcom/baidu/mapapi/map/DotOptions; = InvokeRadius(int)
  zIndex(I)Lcom/baidu/mapapi/map/DotOptions; = InvokeZIndex(int)
  visible(Z)Lcom/baidu/mapapi/map/DotOptions; = Visible(bool)
com/baidu/mapapi/map/FileTileProvider = Com.Baidu.Mapapi.Map.FileTileProvider
  <init>()V = .ctor()
  getTile(III)Lcom/baidu/mapapi/map/Tile; = GetTile(int, int, int)
com/baidu/mapapi/map/Gradient = Com.Baidu.Mapapi.Map.Gradient
  <init>([I[F)V = .ctor(int[], float[])
com/baidu/mapapi/map/GroundOverlay = Com.Baidu.Mapapi.Map.GroundOverlay
  getAnchorX()F = AnchorX
  getAnchorY()F = AnchorY
  getBounds()Lcom/baidu/mapapi/model/LatLngBounds; = Bounds
  getHeight()D = Height
  getImage()Lcom/baidu/mapapi/map/BitmapDescriptor; = Image
  setImage(Lcom/baidu/mapapi/map/BitmapDescriptor;)V = Image
  getPosition()Lcom/baidu/mapapi/model/LatLng; = Position
  setPosition(Lcom/baidu/mapapi/model/LatLng;)V = Position
  getTransparency()F = Transparency
  setTransparency(F)V = Transparency
  getWidth()D = Width
  setAnchor(FF)V = SetAnchor(float, float)
  setDimensions(I)V = SetDimensions(int)
  setDimensions(II)V = SetDimensions(int, int)
  setPositionFromBounds(Lcom/baidu/mapapi/model/LatLngBounds;)V = SetPositionFromBounds(Com.Baidu.Mapapi.Model.LatLngBounds)
com/baidu/mapapi/map/GroundOverlayOptions = Com.Baidu.Mapapi.Map.GroundOverlayOptions
  <init>()V = .ctor()
  getAnchorX()F = AnchorX
  getAnchorY()F = AnchorY
  getBounds()Lcom/baidu/mapapi/model/LatLngBounds; = Bounds
  getExtraInfo()Landroid/os/Bundle; = ExtraInfo
  getHeight()I = Height
  getImage()Lcom/baidu/mapapi/map/BitmapDescriptor; = Image
  isVisible()Z = IsVisible
  getPosition()Lcom/baidu/mapapi/model/LatLng; = Position
  getTransparency()F = Transparency
  getWidth()I = Width
  getZIndex()I = ZIndex
  anchor(FF)Lcom/baidu/mapapi/map/GroundOverlayOptions; = Anchor(float, float)
  dimensions(I)Lcom/baidu/mapapi/map/GroundOverlayOptions; = Dimensions(int)
  dimensions(II)Lcom/baidu/mapapi/map/GroundOverlayOptions; = Dimensions(int, int)
  extraInfo(Landroid/os/Bundle;)Lcom/baidu/mapapi/map/GroundOverlayOptions; = InvokeExtraInfo(Android.OS.Bundle)
  image(Lcom/baidu/mapapi/map/BitmapDescriptor;)Lcom/baidu/mapapi/map/GroundOverlayOptions; = InvokeImage(Com.Baidu.Mapapi.Map.BitmapDescriptor)
  position(Lcom/baidu/mapapi/model/LatLng;)Lcom/baidu/mapapi/map/GroundOverlayOptions; = InvokePosition(Com.Baidu.Mapapi.Model.LatLng)
  transparency(F)Lcom/baidu/mapapi/map/GroundOverlayOptions; = InvokeTransparency(float)
  zIndex(I)Lcom/baidu/mapapi/map/GroundOverlayOptions; = InvokeZIndex(int)
  positionFromBounds(Lcom/baidu/mapapi/model/LatLngBounds;)Lcom/baidu/mapapi/map/GroundOverlayOptions; = PositionFromBounds(Com.Baidu.Mapapi.Model.LatLngBounds)
  visible(Z)Lcom/baidu/mapapi/map/GroundOverlayOptions; = Visible(bool)
com/baidu/mapapi/map/HeatMap = Com.Baidu.Mapapi.Map.HeatMap
  DEFAULT_GRADIENT = DefaultGradient
  DEFAULT_OPACITY = DefaultOpacity
  DEFAULT_RADIUS = DefaultRadius
  removeHeatMap()V = RemoveHeatMap()
com/baidu/mapapi/map/InfoWindow = Com.Baidu.Mapapi.Map.InfoWindow
  <init>(Landroid/view/View;Lcom/baidu/mapapi/model/LatLng;I)V = .ctor(Android.Views.View, Com.Baidu.Mapapi.Model.LatLng, int)
  <init>(Lcom/baidu/mapapi/map/BitmapDescriptor;Lcom/baidu/mapapi/model/LatLng;ILcom/baidu/mapapi/map/InfoWindow$OnInfoWindowClickListener;)V = .ctor(Com.Baidu.Mapapi.Map.BitmapDescriptor, Com.Baidu.Mapapi.Model.LatLng, int, Com.Baidu.Mapapi.Map.InfoWindow.IOnInfoWindowClickListener)
com/baidu/mapapi/map/ItemizedOverlay = Com.Baidu.Mapapi.Map.ItemizedOverlay
  <init>(Landroid/graphics/drawable/Drawable;Lcom/baidu/mapapi/map/MapView;)V = .ctor(Android.Graphics.Drawables.Drawable, Com.Baidu.Mapapi.Map.MapView)
  addItem(Lcom/baidu/mapapi/map/OverlayOptions;)V = AddItem(Com.Baidu.Mapapi.Map.OverlayOptions)
  reAddAll()V = ReAddAll()
  removeAll()V = RemoveAll()
com/baidu/mapapi/map/LogoPosition = Com.Baidu.Mapapi.Map.LogoPosition
  logoPostionCenterBottom = LogoPostionCenterBottom
  logoPostionCenterTop = LogoPostionCenterTop
  logoPostionleftBottom = LogoPostionleftBottom
  logoPostionleftTop = LogoPostionleftTop
  logoPostionRightBottom = LogoPostionRightBottom
  logoPostionRightTop = LogoPostionRightTop
  valueOf(Ljava/lang/String;)Lcom/baidu/mapapi/map/LogoPosition; = ValueOf(string)
  values()[Lcom/baidu/mapapi/map/LogoPosition; = Values()
com/baidu/mapapi/map/MapBaseIndoorMapInfo = Com.Baidu.Mapapi.Map.MapBaseIndoorMapInfo
  <init>()V = .ctor()
  <init>(Lcom/baidu/mapapi/map/MapBaseIndoorMapInfo;)V = .ctor(Com.Baidu.Mapapi.Map.MapBaseIndoorMapInfo)
  <init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;)V = .ctor(string, string, System.Collections.Generic.IList<string>)
  getCurFloor()Ljava/lang/String; = CurFloor
  getFloors()Ljava/util/ArrayList; = Floors
  getID()Ljava/lang/String; = ID
com/baidu/mapapi/map/MapFragment = Com.Baidu.Mapapi.Map.MapFragment
  <init>()V = .ctor()
  getBaiduMap()Lcom/baidu/mapapi/map/BaiduMap; = BaiduMap
  getMapView()Lcom/baidu/mapapi/map/MapView; = MapView
  newInstance()Lcom/baidu/mapapi/map/MapFragment; = NewInstance()
  newInstance(Lcom/baidu/mapapi/map/BaiduMapOptions;)Lcom/baidu/mapapi/map/MapFragment; = NewInstance(Com.Baidu.Mapapi.Map.BaiduMapOptions)
com/baidu/mapapi/map/MapPoi = Com.Baidu.Mapapi.Map.MapPoi
  <init>()V = .ctor()
  getName()Ljava/lang/String; = Name
  getPosition()Lcom/baidu/mapapi/model/LatLng; = Position
  getUid()Ljava/lang/String; = Uid
com/baidu/mapapi/map/MapStatus = Com.Baidu.Mapapi.Map.MapStatus
  <init>(Landroid/os/Parcel;)V = .ctor(Android.OS.Parcel)
  bound = Bound
  CREATOR = Creator
  overlook = Overlook
  rotate = Rotate
  target = Target
  targetScreen = TargetScreen
  winRound = WinRound
  zoom = Zoom
  describeContents()I = DescribeContents()
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/baidu/mapapi/map/MapStatusUpdate = Com.Baidu.Mapapi.Map.MapStatusUpdate
com/baidu/mapapi/map/MapStatusUpdateFactory = Com.Baidu.Mapapi.Map.MapStatusUpdateFactory
  newLatLng(Lcom/baidu/mapapi/model/LatLng;)Lcom/baidu/mapapi/map/MapStatusUpdate; = NewLatLng(Com.Baidu.Mapapi.Model.LatLng)
  newLatLngBounds(Lcom/baidu/mapapi/model/LatLngBounds;)Lcom/baidu/mapapi/map/MapStatusUpdate; = NewLatLngBounds(Com.Baidu.Mapapi.Model.LatLngBounds)
  newLatLngBounds(Lcom/baidu/mapapi/model/LatLngBounds;II)Lcom/baidu/mapapi/map/MapStatusUpdate; = NewLatLngBounds(Com.Baidu.Mapapi.Model.LatLngBounds, int, int)
  newLatLngZoom(Lcom/baidu/mapapi/model/LatLng;F)Lcom/baidu/mapapi/map/MapStatusUpdate; = NewLatLngZoom(Com.Baidu.Mapapi.Model.LatLng, float)
  newMapStatus(Lcom/baidu/mapapi/map/MapStatus;)Lcom/baidu/mapapi/map/MapStatusUpdate; = NewMapStatus(Com.Baidu.Mapapi.Map.MapStatus)
  scrollBy(II)Lcom/baidu/mapapi/map/MapStatusUpdate; = ScrollBy(int, int)
  zoomBy(F)Lcom/baidu/mapapi/map/MapStatusUpdate; = ZoomBy(float)
  zoomBy(FLandroid/graphics/Point;)Lcom/baidu/mapapi/map/MapStatusUpdate; = ZoomBy(float, Android.Graphics.Point)
  zoomIn()Lcom/baidu/mapapi/map/MapStatusUpdate; = ZoomIn()
  zoomOut()Lcom/baidu/mapapi/map/MapStatusUpdate; = ZoomOut()
  zoomTo(F)Lcom/baidu/mapapi/map/MapStatusUpdate; = ZoomTo(float)
com/baidu/mapapi/map/MapView = Com.Baidu.Mapapi.Map.MapView
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;I)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet, int)
  <init>(Landroid/content/Context;Lcom/baidu/mapapi/map/BaiduMapOptions;)V = .ctor(Android.Content.Context, Com.Baidu.Mapapi.Map.BaiduMapOptions)
  getLogoPosition()Lcom/baidu/mapapi/map/LogoPosition; = LogoPosition
  setLogoPosition(Lcom/baidu/mapapi/map/LogoPosition;)V = LogoPosition
  getMap()Lcom/baidu/mapapi/map/BaiduMap; = Map
  getMapLevel()I = MapLevel
  getScaleControlViewHeight()I = ScaleControlViewHeight
  getScaleControlViewWidth()I = ScaleControlViewWidth
  onCreate(Landroid/content/Context;Landroid/os/Bundle;)V = OnCreate(Android.Content.Context, Android.OS.Bundle)
  onDestroy()V = OnDestroy()
  onLayout(ZIIII)V = OnLayout(bool, int, int, int, int)
  onPause()V = OnPause()
  onResume()V = OnResume()
  onSaveInstanceState(Landroid/os/Bundle;)V = OnSaveInstanceState(Android.OS.Bundle)
  setCustomMapStylePath(Ljava/lang/String;)V = SetCustomMapStylePath(string)
  setMapCustomEnable(Z)V = SetMapCustomEnable(bool)
  setScaleControlPosition(Landroid/graphics/Point;)V = SetScaleControlPosition(Android.Graphics.Point)
  setZoomControlsPosition(Landroid/graphics/Point;)V = SetZoomControlsPosition(Android.Graphics.Point)
  setZOrderMediaOverlay(Z)V = SetZOrderMediaOverlay(bool)
  showScaleControl(Z)V = ShowScaleControl(bool)
  showZoomControls(Z)V = ShowZoomControls(bool)
com/baidu/mapapi/map/MapViewLayoutParams = Com.Baidu.Mapapi.Map.MapViewLayoutParams
  ALIGN_BOTTOM = AlignBottom
  ALIGN_CENTER_HORIZONTAL = AlignCenterHorizontal
  ALIGN_CENTER_VERTICAL = AlignCenterVertical
  ALIGN_LEFT = AlignLeft
  ALIGN_RIGHT = AlignRight
  ALIGN_TOP = AlignTop
com/baidu/mapapi/map/Marker = Com.Baidu.Mapapi.Map.Marker
  getAlpha()F = Alpha
  setAlpha(F)V = Alpha
  getAnchorX()F = AnchorX
  getAnchorY()F = AnchorY
  isDraggable()Z = Draggable
  setDraggable(Z)V = Draggable
  isFlat()Z = Flat
  setFlat(Z)V = Flat
  getIcon()Lcom/baidu/mapapi/map/BitmapDescriptor; = Icon
  setIcon(Lcom/baidu/mapapi/map/BitmapDescriptor;)V = Icon
  getIcons()Ljava/util/ArrayList; = Icons
  setIcons(Ljava/util/ArrayList;)V = Icons
  getPeriod()I = Period
  setPeriod(I)V = Period
  isPerspective()Z = Perspective
  setPerspective(Z)V = Perspective
  getPosition()Lcom/baidu/mapapi/model/LatLng; = Position
  setPosition(Lcom/baidu/mapapi/model/LatLng;)V = Position
  getRotate()F = Rotate
  setRotate(F)V = Rotate
  getTitle()Ljava/lang/String; = Title
  setTitle(Ljava/lang/String;)V = Title
  setAnchor(FF)V = SetAnchor(float, float)
  setToTop()V = SetToTop()
com/baidu/mapapi/map/MarkerOptions = Com.Baidu.Mapapi.Map.MarkerOptions
  <init>()V = .ctor()
  getAlpha()F = Alpha
  getAnchorX()F = AnchorX
  getAnchorY()F = AnchorY
  getAnimateType()Lcom/baidu/mapapi/map/MarkerOptions$MarkerAnimateType; = AnimateType
  getExtraInfo()Landroid/os/Bundle; = ExtraInfo
  getIcon()Lcom/baidu/mapapi/map/BitmapDescriptor; = Icon
  getIcons()Ljava/util/ArrayList; = Icons
  isDraggable()Z = IsDraggable
  isFlat()Z = IsFlat
  isPerspective()Z = IsPerspective
  isVisible()Z = IsVisible
  getPeriod()I = Period
  getPosition()Lcom/baidu/mapapi/model/LatLng; = Position
  getRotate()F = Rotate
  getTitle()Ljava/lang/String; = Title
  getZIndex()I = ZIndex
  anchor(FF)Lcom/baidu/mapapi/map/MarkerOptions; = Anchor(float, float)
  draggable(Z)Lcom/baidu/mapapi/map/MarkerOptions; = Draggable(bool)
  flat(Z)Lcom/baidu/mapapi/map/MarkerOptions; = Flat(bool)
  alpha(F)Lcom/baidu/mapapi/map/MarkerOptions; = InvokeAlpha(float)
  animateType(Lcom/baidu/mapapi/map/MarkerOptions$MarkerAnimateType;)Lcom/baidu/mapapi/map/MarkerOptions; = InvokeAnimateType(Com.Baidu.Mapapi.Map.MarkerOptions.MarkerAnimateType)
  extraInfo(Landroid/os/Bundle;)Lcom/baidu/mapapi/map/MarkerOptions; = InvokeExtraInfo(Android.OS.Bundle)
  icon(Lcom/baidu/mapapi/map/BitmapDescriptor;)Lcom/baidu/mapapi/map/MarkerOptions; = InvokeIcon(Com.Baidu.Mapapi.Map.BitmapDescriptor)
  icons(Ljava/util/ArrayList;)Lcom/baidu/mapapi/map/MarkerOptions; = InvokeIcons(System.Collections.Generic.IList<Com.Baidu.Mapapi.Map.BitmapDescriptor>)
  period(I)Lcom/baidu/mapapi/map/MarkerOptions; = InvokePeriod(int)
  position(Lcom/baidu/mapapi/model/LatLng;)Lcom/baidu/mapapi/map/MarkerOptions; = InvokePosition(Com.Baidu.Mapapi.Model.LatLng)
  rotate(F)Lcom/baidu/mapapi/map/MarkerOptions; = InvokeRotate(float)
  title(Ljava/lang/String;)Lcom/baidu/mapapi/map/MarkerOptions; = InvokeTitle(string)
  zIndex(I)Lcom/baidu/mapapi/map/MarkerOptions; = InvokeZIndex(int)
  perspective(Z)Lcom/baidu/mapapi/map/MarkerOptions; = Perspective(bool)
  visible(Z)Lcom/baidu/mapapi/map/MarkerOptions; = Visible(bool)
com/baidu/mapapi/map/MyLocationConfiguration = Com.Baidu.Mapapi.Map.MyLocationConfiguration
  <init>(Lcom/baidu/mapapi/map/MyLocationConfiguration$LocationMode;ZLcom/baidu/mapapi/map/BitmapDescriptor;)V = .ctor(Com.Baidu.Mapapi.Map.MyLocationConfiguration.LocationMode, bool, Com.Baidu.Mapapi.Map.BitmapDescriptor)
  <init>(Lcom/baidu/mapapi/map/MyLocationConfiguration$LocationMode;ZLcom/baidu/mapapi/map/BitmapDescriptor;II)V = .ctor(Com.Baidu.Mapapi.Map.MyLocationConfiguration.LocationMode, bool, Com.Baidu.Mapapi.Map.BitmapDescriptor, int, int)
  accuracyCircleFillColor = AccuracyCircleFillColor
  accuracyCircleStrokeColor = AccuracyCircleStrokeColor
  customMarker = CustomMarker
  enableDirection = EnableDirection
  locationMode = LocationMode
com/baidu/mapapi/map/MyLocationData = Com.Baidu.Mapapi.Map.MyLocationData
  accuracy = Accuracy
  direction = Direction
  latitude = Latitude
  longitude = Longitude
  satellitesNum = SatellitesNum
  speed = Speed
com/baidu/mapapi/map/offline/MKOfflineMap = Com.Baidu.Mapapi.Map.Offline.MKOfflineMap
  <init>()V = .ctor()
  TYPE_DOWNLOAD_UPDATE = TypeDownloadUpdate
  TYPE_NETWORK_ERROR = TypeNetworkError
  TYPE_NEW_OFFLINE = TypeNewOffline
  TYPE_VER_UPDATE = TypeVerUpdate
  getAllUpdateInfo()Ljava/util/ArrayList; = AllUpdateInfo
  getHotCityList()Ljava/util/ArrayList; = HotCityList
  getOfflineCityList()Ljava/util/ArrayList; = OfflineCityList
  destroy()V = Destroy()
  getUpdateInfo(I)Lcom/baidu/mapapi/map/offline/MKOLUpdateElement; = GetUpdateInfo(int)
  importOfflineData()I = ImportOfflineData()
  importOfflineData(Z)I = ImportOfflineData(bool)
  init(Lcom/baidu/mapapi/map/offline/MKOfflineMapListener;)Z = Init(Com.Baidu.Mapapi.Map.Offline.IMKOfflineMapListener)
  pause(I)Z = Pause(int)
  remove(I)Z = Remove(int)
  searchCity(Ljava/lang/String;)Ljava/util/ArrayList; = SearchCity(string)
  start(I)Z = Start(int)
  update(I)Z = Update(int)
com/baidu/mapapi/map/offline/MKOfflineMapListener = Com.Baidu.Mapapi.Map.Offline.IMKOfflineMapListener
  onGetOfflineMapState(II)V = OnGetOfflineMapState(int, int)
com/baidu/mapapi/map/offline/MKOLSearchRecord = Com.Baidu.Mapapi.Map.Offline.MKOLSearchRecord
  <init>()V = .ctor()
  childCities = ChildCities
  cityID = CityID
  cityName = CityName
  cityType = CityType
  size = Size
com/baidu/mapapi/map/offline/MKOLUpdateElement = Com.Baidu.Mapapi.Map.Offline.MKOLUpdateElement
  <init>()V = .ctor()
  cityID = CityID
  cityName = CityName
  DOWNLOADING = Downloading
  eOLDSFormatError = EOLDSFormatError
  eOLDSInstalling = EOLDSInstalling
  eOLDSIOError = EOLDSIOError
  eOLDSMd5Error = EOLDSMd5Error
  eOLDSNetError = EOLDSNetError
  eOLDSWifiError = EOLDSWifiError
  FINISHED = Finished
  geoPt = GeoPt
  level = Level
  ratio = Ratio
  serversize = Serversize
  size = Size
  status = Status
  SUSPENDED = Suspended
  UNDEFINED = Undefined
  update = Update
  WAITING = Waiting
com/baidu/mapapi/map/offline/OfflineMapUtil = Com.Baidu.Mapapi.Map.Offline.OfflineMapUtil
  <init>()V = .ctor()
com/baidu/mapapi/map/Overlay = Com.Baidu.Mapapi.Map.Overlay
  <init>()V = .ctor()
  getExtraInfo()Landroid/os/Bundle; = ExtraInfo
  setExtraInfo(Landroid/os/Bundle;)V = ExtraInfo
  isVisible()Z = Visible
  setVisible(Z)V = Visible
  getZIndex()I = ZIndex
  setZIndex(I)V = ZIndex
  remove()V = Remove()
com/baidu/mapapi/map/OverlayOptions = Com.Baidu.Mapapi.Map.OverlayOptions
  <init>()V = .ctor()
com/baidu/mapapi/map/Polygon = Com.Baidu.Mapapi.Map.Polygon
  getFillColor()I = FillColor
  setFillColor(I)V = FillColor
  getPoints()Ljava/util/List; = Points
  setPoints(Ljava/util/List;)V = Points
  getStroke()Lcom/baidu/mapapi/map/Stroke; = Stroke
  setStroke(Lcom/baidu/mapapi/map/Stroke;)V = Stroke
com/baidu/mapapi/map/PolygonOptions = Com.Baidu.Mapapi.Map.PolygonOptions
  <init>()V = .ctor()
  getExtraInfo()Landroid/os/Bundle; = ExtraInfo
  getFillColor()I = FillColor
  isVisible()Z = IsVisible
  getPoints()Ljava/util/List; = Points
  getStroke()Lcom/baidu/mapapi/map/Stroke; = Stroke
  getZIndex()I = ZIndex
  extraInfo(Landroid/os/Bundle;)Lcom/baidu/mapapi/map/PolygonOptions; = InvokeExtraInfo(Android.OS.Bundle)
  fillColor(I)Lcom/baidu/mapapi/map/PolygonOptions; = InvokeFillColor(int)
  points(Ljava/util/List;)Lcom/baidu/mapapi/map/PolygonOptions; = InvokePoints(System.Collections.Generic.IList<Com.Baidu.Mapapi.Model.LatLng>)
  stroke(Lcom/baidu/mapapi/map/Stroke;)Lcom/baidu/mapapi/map/PolygonOptions; = InvokeStroke(Com.Baidu.Mapapi.Map.Stroke)
  zIndex(I)Lcom/baidu/mapapi/map/PolygonOptions; = InvokeZIndex(int)
  visible(Z)Lcom/baidu/mapapi/map/PolygonOptions; = Visible(bool)
com/baidu/mapapi/map/Polyline = Com.Baidu.Mapapi.Map.Polyline
  getColor()I = Color
  setColor(I)V = Color
  isDottedLine()Z = DottedLine
  setDottedLine(Z)V = DottedLine
  isFocus()Z = Focus
  setFocus(Z)V = Focus
  getPoints()Ljava/util/List; = Points
  setPoints(Ljava/util/List;)V = Points
  getWidth()I = Width
  setWidth(I)V = Width
com/baidu/mapapi/map/PolylineOptions = Com.Baidu.Mapapi.Map.PolylineOptions
  <init>()V = .ctor()
  getColor()I = Color
  getCustomTexture()Lcom/baidu/mapapi/map/BitmapDescriptor; = CustomTexture
  getCustomTextureList()Ljava/util/List; = CustomTextureList
  getExtraInfo()Landroid/os/Bundle; = ExtraInfo
  isDottedLine()Z = IsDottedLine
  isFocus()Z = IsFocus
  isVisible()Z = IsVisible
  getPoints()Ljava/util/List; = Points
  getTextureIndexs()Ljava/util/List; = TextureIndexs
  getWidth()I = Width
  getZIndex()I = ZIndex
  colorsValues(Ljava/util/List;)Lcom/baidu/mapapi/map/PolylineOptions; = ColorsValues(System.Collections.Generic.IList<Java.Lang.Integer>)
  dottedLine(Z)Lcom/baidu/mapapi/map/PolylineOptions; = DottedLine(bool)
  focus(Z)Lcom/baidu/mapapi/map/PolylineOptions; = Focus(bool)
  color(I)Lcom/baidu/mapapi/map/PolylineOptions; = InvokeColor(int)
  customTexture(Lcom/baidu/mapapi/map/BitmapDescriptor;)Lcom/baidu/mapapi/map/PolylineOptions; = InvokeCustomTexture(Com.Baidu.Mapapi.Map.BitmapDescriptor)
  customTextureList(Ljava/util/List;)Lcom/baidu/mapapi/map/PolylineOptions; = InvokeCustomTextureList(System.Collections.Generic.IList<Com.Baidu.Mapapi.Map.BitmapDescriptor>)
  extraInfo(Landroid/os/Bundle;)Lcom/baidu/mapapi/map/PolylineOptions; = InvokeExtraInfo(Android.OS.Bundle)
  points(Ljava/util/List;)Lcom/baidu/mapapi/map/PolylineOptions; = InvokePoints(System.Collections.Generic.IList<Com.Baidu.Mapapi.Model.LatLng>)
  width(I)Lcom/baidu/mapapi/map/PolylineOptions; = InvokeWidth(int)
  zIndex(I)Lcom/baidu/mapapi/map/PolylineOptions; = InvokeZIndex(int)
  keepScale(Z)Lcom/baidu/mapapi/map/PolylineOptions; = KeepScale(bool)
  textureIndex(Ljava/util/List;)Lcom/baidu/mapapi/map/PolylineOptions; = TextureIndex(System.Collections.Generic.IList<Java.Lang.Integer>)
  visible(Z)Lcom/baidu/mapapi/map/PolylineOptions; = Visible(bool)
com/baidu/mapapi/map/Projection = Com.Baidu.Mapapi.Map.Projection
  fromScreenLocation(Landroid/graphics/Point;)Lcom/baidu/mapapi/model/LatLng; = FromScreenLocation(Android.Graphics.Point)
  metersToEquatorPixels(F)F = MetersToEquatorPixels(float)
  toOpenGLLocation(Lcom/baidu/mapapi/model/LatLng;Lcom/baidu/mapapi/map/MapStatus;)Landroid/graphics/PointF; = ToOpenGLLocation(Com.Baidu.Mapapi.Model.LatLng, Com.Baidu.Mapapi.Map.MapStatus)
  toOpenGLNormalization(Lcom/baidu/mapapi/model/LatLng;Lcom/baidu/mapapi/map/MapStatus;)Landroid/graphics/PointF; = ToOpenGLNormalization(Com.Baidu.Mapapi.Model.LatLng, Com.Baidu.Mapapi.Map.MapStatus)
  toScreenLocation(Lcom/baidu/mapapi/model/LatLng;)Landroid/graphics/Point; = ToScreenLocation(Com.Baidu.Mapapi.Model.LatLng)
com/baidu/mapapi/map/Stroke = Com.Baidu.Mapapi.Map.Stroke
  <init>(II)V = .ctor(int, int)
  color = Color
  strokeWidth = StrokeWidth
com/baidu/mapapi/map/SwipeDismissTouchListener = Com.Baidu.Mapapi.Map.SwipeDismissTouchListener
  <init>(Landroid/view/View;Ljava/lang/Object;Lcom/baidu/mapapi/map/SwipeDismissTouchListener$DismissCallbacks;)V = .ctor(Android.Views.View, Java.Lang.Object, Com.Baidu.Mapapi.Map.SwipeDismissTouchListener.IDismissCallbacks)
  onTouch(Landroid/view/View;Landroid/view/MotionEvent;)Z = OnTouch(Android.Views.View, Android.Views.MotionEvent)
com/baidu/mapapi/map/SwipeDismissView = Com.Baidu.Mapapi.Map.SwipeDismissView
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;ILandroid/view/View;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet, int, Android.Views.View)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;Landroid/view/View;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet, Android.Views.View)
  <init>(Landroid/content/Context;Landroid/view/View;)V = .ctor(Android.Content.Context, Android.Views.View)
  setCallback(Lcom/baidu/mapapi/map/WearMapView$OnDismissCallback;)V = SetCallback(Com.Baidu.Mapapi.Map.WearMapView.IOnDismissCallback)
com/baidu/mapapi/map/Text = Com.Baidu.Mapapi.Map.Text
  getAlignX()F = AlignX
  getAlignY()F = AlignY
  getBgColor()I = BgColor
  setBgColor(I)V = BgColor
  getFontColor()I = FontColor
  setFontColor(I)V = FontColor
  getFontSize()I = FontSize
  setFontSize(I)V = FontSize
  getPosition()Lcom/baidu/mapapi/model/LatLng; = Position
  setPosition(Lcom/baidu/mapapi/model/LatLng;)V = Position
  getRotate()F = Rotate
  setRotate(F)V = Rotate
  getTypeface()Landroid/graphics/Typeface; = Typeface
  setTypeface(Landroid/graphics/Typeface;)V = Typeface
  getText()Ljava/lang/String; = GetText()
  setAlign(II)V = SetAlign(int, int)
  setText(Ljava/lang/String;)V = SetText(string)
com/baidu/mapapi/map/TextOptions = Com.Baidu.Mapapi.Map.TextOptions
  <init>()V = .ctor()
  ALIGN_BOTTOM = AlignBottom
  ALIGN_CENTER_HORIZONTAL = AlignCenterHorizontal
  ALIGN_CENTER_VERTICAL = AlignCenterVertical
  ALIGN_LEFT = AlignLeft
  ALIGN_RIGHT = AlignRight
  ALIGN_TOP = AlignTop
  getAlignX()F = AlignX
  getAlignY()F = AlignY
  getBgColor()I = BgColor
  getExtraInfo()Landroid/os/Bundle; = ExtraInfo
  getFontColor()I = FontColor
  getFontSize()I = FontSize
  isVisible()Z = IsVisible
  getPosition()Lcom/baidu/mapapi/model/LatLng; = Position
  getRotate()F = Rotate
  getText()Ljava/lang/String; = Text
  getTypeface()Landroid/graphics/Typeface; = Typeface
  getZIndex()I = ZIndex
  align(II)Lcom/baidu/mapapi/map/TextOptions; = Align(int, int)
  bgColor(I)Lcom/baidu/mapapi/map/TextOptions; = InvokeBgColor(int)
  extraInfo(Landroid/os/Bundle;)Lcom/baidu/mapapi/map/TextOptions; = InvokeExtraInfo(Android.OS.Bundle)
  fontColor(I)Lcom/baidu/mapapi/map/TextOptions; = InvokeFontColor(int)
  fontSize(I)Lcom/baidu/mapapi/map/TextOptions; = InvokeFontSize(int)
  position(Lcom/baidu/mapapi/model/LatLng;)Lcom/baidu/mapapi/map/TextOptions; = InvokePosition(Com.Baidu.Mapapi.Model.LatLng)
  rotate(F)Lcom/baidu/mapapi/map/TextOptions; = InvokeRotate(float)
  text(Ljava/lang/String;)Lcom/baidu/mapapi/map/TextOptions; = InvokeText(string)
  typeface(Landroid/graphics/Typeface;)Lcom/baidu/mapapi/map/TextOptions; = InvokeTypeface(Android.Graphics.Typeface)
  zIndex(I)Lcom/baidu/mapapi/map/TextOptions; = InvokeZIndex(int)
  visible(Z)Lcom/baidu/mapapi/map/TextOptions; = Visible(bool)
com/baidu/mapapi/map/TextureMapFragment = Com.Baidu.Mapapi.Map.TextureMapFragment
  <init>()V = .ctor()
  getBaiduMap()Lcom/baidu/mapapi/map/BaiduMap; = BaiduMap
  getMapView()Lcom/baidu/mapapi/map/TextureMapView; = MapView
  newInstance()Lcom/baidu/mapapi/map/TextureMapFragment; = NewInstance()
  newInstance(Lcom/baidu/mapapi/map/BaiduMapOptions;)Lcom/baidu/mapapi/map/TextureMapFragment; = NewInstance(Com.Baidu.Mapapi.Map.BaiduMapOptions)
com/baidu/mapapi/map/TextureMapView = Com.Baidu.Mapapi.Map.TextureMapView
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;I)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet, int)
  <init>(Landroid/content/Context;Lcom/baidu/mapapi/map/BaiduMapOptions;)V = .ctor(Android.Content.Context, Com.Baidu.Mapapi.Map.BaiduMapOptions)
  getLogoPosition()Lcom/baidu/mapapi/map/LogoPosition; = LogoPosition
  setLogoPosition(Lcom/baidu/mapapi/map/LogoPosition;)V = LogoPosition
  getMap()Lcom/baidu/mapapi/map/BaiduMap; = Map
  getMapLevel()I = MapLevel
  getScaleControlViewHeight()I = ScaleControlViewHeight
  getScaleControlViewWidth()I = ScaleControlViewWidth
  onCreate(Landroid/content/Context;Landroid/os/Bundle;)V = OnCreate(Android.Content.Context, Android.OS.Bundle)
  onDestroy()V = OnDestroy()
  onLayout(ZIIII)V = OnLayout(bool, int, int, int, int)
  onPause()V = OnPause()
  onResume()V = OnResume()
  onSaveInstanceState(Landroid/os/Bundle;)V = OnSaveInstanceState(Android.OS.Bundle)
  setCustomMapStylePath(Ljava/lang/String;)V = SetCustomMapStylePath(string)
  setMapCustomEnable(Z)V = SetMapCustomEnable(bool)
  setScaleControlPosition(Landroid/graphics/Point;)V = SetScaleControlPosition(Android.Graphics.Point)
  setZoomControlsPosition(Landroid/graphics/Point;)V = SetZoomControlsPosition(Android.Graphics.Point)
  showScaleControl(Z)V = ShowScaleControl(bool)
  showZoomControls(Z)V = ShowZoomControls(bool)
com/baidu/mapapi/map/Tile = Com.Baidu.Mapapi.Map.Tile
  <init>(II[B)V = .ctor(int, int, byte[])
  data = Data
  height = Height
  width = Width
  toBundle()Landroid/os/Bundle; = ToBundle()
com/baidu/mapapi/map/TileOverlay = Com.Baidu.Mapapi.Map.TileOverlay
  <init>(Lcom/baidu/mapapi/map/BaiduMap;Lcom/baidu/mapapi/map/TileProvider;)V = .ctor(Com.Baidu.Mapapi.Map.BaiduMap, Com.Baidu.Mapapi.Map.ITileProvider)
  clearTileCache()Z = ClearTileCache()
  removeTileOverlay()V = RemoveTileOverlay()
com/baidu/mapapi/map/TileOverlayOptions = Com.Baidu.Mapapi.Map.TileOverlayOptions
  <init>()V = .ctor()
  datasource = Datasource
  urlString = UrlString
  setMaxTileTmp(I)Lcom/baidu/mapapi/map/TileOverlayOptions; = SetMaxTileTmp(int)
  setPositionFromBounds(Lcom/baidu/mapapi/model/LatLngBounds;)Lcom/baidu/mapapi/map/TileOverlayOptions; = SetPositionFromBounds(Com.Baidu.Mapapi.Model.LatLngBounds)
  tileProvider(Lcom/baidu/mapapi/map/TileProvider;)Lcom/baidu/mapapi/map/TileOverlayOptions; = TileProvider(Com.Baidu.Mapapi.Map.ITileProvider)
com/baidu/mapapi/map/TileProvider = Com.Baidu.Mapapi.Map.ITileProvider
  getMaxDisLevel()I = MaxDisLevel
  getMinDisLevel()I = MinDisLevel
com/baidu/mapapi/map/UiSettings = Com.Baidu.Mapapi.Map.UiSettings
  isCompassEnabled()Z = CompassEnabled
  setCompassEnabled(Z)V = CompassEnabled
  isOverlookingGesturesEnabled()Z = OverlookingGesturesEnabled
  setOverlookingGesturesEnabled(Z)V = OverlookingGesturesEnabled
  isRotateGesturesEnabled()Z = RotateGesturesEnabled
  setRotateGesturesEnabled(Z)V = RotateGesturesEnabled
  isScrollGesturesEnabled()Z = ScrollGesturesEnabled
  setScrollGesturesEnabled(Z)V = ScrollGesturesEnabled
  isZoomGesturesEnabled()Z = ZoomGesturesEnabled
  setZoomGesturesEnabled(Z)V = ZoomGesturesEnabled
  setAllGesturesEnabled(Z)V = SetAllGesturesEnabled(bool)
com/baidu/mapapi/map/UrlTileProvider = Com.Baidu.Mapapi.Map.UrlTileProvider
  <init>()V = .ctor()
  getTileUrl()Ljava/lang/String; = TileUrl
com/baidu/mapapi/map/WearMapView = Com.Baidu.Mapapi.Map.WearMapView
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet)
  <init>(Landroid/content/Context;Landroid/util/AttributeSet;I)V = .ctor(Android.Content.Context, Android.Util.IAttributeSet, int)
  <init>(Landroid/content/Context;Lcom/baidu/mapapi/map/BaiduMapOptions;)V = .ctor(Android.Content.Context, Com.Baidu.Mapapi.Map.BaiduMapOptions)
  BT_INVIEW = BtInview
  mTask = MTask
  mTimer = MTimer
  getMap()Lcom/baidu/mapapi/map/BaiduMap; = Map
  getMapLevel()I = MapLevel
  getScaleControlViewHeight()I = ScaleControlViewHeight
  getScaleControlViewWidth()I = ScaleControlViewWidth
  onApplyWindowInsets(Landroid/view/View;Landroid/view/WindowInsets;)Landroid/view/WindowInsets; = OnApplyWindowInsets(Android.Views.View, Android.Views.WindowInsets)
  onCreate(Landroid/content/Context;Landroid/os/Bundle;)V = OnCreate(Android.Content.Context, Android.OS.Bundle)
  onDestroy()V = OnDestroy()
  onDismiss()V = OnDismiss()
  onEnterAmbient(Landroid/os/Bundle;)V = OnEnterAmbient(Android.OS.Bundle)
  onExitAmbient()V = OnExitAmbient()
  onLayout(ZIIII)V = OnLayout(bool, int, int, int, int)
  onSaveInstanceState(Landroid/os/Bundle;)V = OnSaveInstanceState(Android.OS.Bundle)
  setCustomMapStylePath(Ljava/lang/String;)V = SetCustomMapStylePath(string)
  setMapCustomEnable(Z)V = SetMapCustomEnable(bool)
  setOnDismissCallbackListener(Lcom/baidu/mapapi/map/WearMapView$OnDismissCallback;)V = SetOnDismissCallbackListener(Com.Baidu.Mapapi.Map.WearMapView.IOnDismissCallback)
  setScaleControlPosition(Landroid/graphics/Point;)V = SetScaleControlPosition(Android.Graphics.Point)
  setViewAnimitionEnable(Z)V = SetViewAnimitionEnable(bool)
  setZoomControlsPosition(Landroid/graphics/Point;)V = SetZoomControlsPosition(Android.Graphics.Point)
  showScaleControl(Z)V = ShowScaleControl(bool)
  showZoomControls(Z)V = ShowZoomControls(bool)
com/baidu/mapapi/map/WinRound = Com.Baidu.Mapapi.Map.WinRound
  <init>()V = .ctor()
  bottom = Bottom
  left = Left
  right = Right
  top = Top
com/baidu/mapapi/model/CoordUtil = Com.Baidu.Mapapi.Model.CoordUtil
  <init>()V = .ctor()
  Coordinate_encryptEx(FFLjava/lang/String;)Lcom/baidu/mapapi/model/LatLng; = Coordinate_encryptEx(float, float, string)
  decodeLocation(Ljava/lang/String;)Lcom/baidu/mapapi/model/LatLng; = DecodeLocation(string)
  decodeLocationList(Ljava/lang/String;)Ljava/util/List; = DecodeLocationList(string)
  decodeLocationList2D(Ljava/lang/String;)Ljava/util/List; = DecodeLocationList2D(string)
  decodeNodeLocation(Ljava/lang/String;)Lcom/baidu/mapapi/model/LatLng; = DecodeNodeLocation(string)
  getDistance(Lcom/baidu/mapapi/model/inner/Point;Lcom/baidu/mapapi/model/inner/Point;)D = GetDistance(Com.Baidu.Mapapi.Model.Inner.Point, Com.Baidu.Mapapi.Model.Inner.Point)
  getMCDistanceByOneLatLngAndRadius(Lcom/baidu/mapapi/model/LatLng;I)I = GetMCDistanceByOneLatLngAndRadius(Com.Baidu.Mapapi.Model.LatLng, int)
  ll2mc(Lcom/baidu/mapapi/model/LatLng;)Lcom/baidu/mapapi/model/inner/GeoPoint; = Ll2mc(Com.Baidu.Mapapi.Model.LatLng)
  ll2point(Lcom/baidu/mapapi/model/LatLng;)Lcom/baidu/mapapi/model/inner/Point; = Ll2point(Com.Baidu.Mapapi.Model.LatLng)
  mc2ll(Lcom/baidu/mapapi/model/inner/GeoPoint;)Lcom/baidu/mapapi/model/LatLng; = Mc2ll(Com.Baidu.Mapapi.Model.Inner.GeoPoint)
com/baidu/mapapi/model/inner/GeoPoint = Com.Baidu.Mapapi.Model.Inner.GeoPoint
  <init>(DD)V = .ctor(double, double)
  getLatitudeE6()D = LatitudeE6
  setLatitudeE6(D)V = LatitudeE6
  getLongitudeE6()D = LongitudeE6
  setLongitudeE6(D)V = LongitudeE6
com/baidu/mapapi/model/inner/MapBound = Com.Baidu.Mapapi.Model.Inner.MapBound
  <init>()V = .ctor()
  ptLB = PtLB
  ptRT = PtRT
  getPtLB()Lcom/baidu/mapapi/model/inner/Point; = PtLB
  setPtLB(Lcom/baidu/mapapi/model/inner/Point;)V = PtLB
  getPtRT()Lcom/baidu/mapapi/model/inner/Point; = PtRT
  setPtRT(Lcom/baidu/mapapi/model/inner/Point;)V = PtRT
com/baidu/mapapi/model/inner/Point = Com.Baidu.Mapapi.Model.Inner.Point
  <init>()V = .ctor()
  <init>(II)V = .ctor(int, int)
  x = X
  y = Y
  getmPtx()I = GetmPtx()
  getmPty()I = GetmPty()
  setmPtx(I)V = SetmPtx(int)
  setmPty(I)V = SetmPty(int)
com/baidu/mapapi/model/LatLng = Com.Baidu.Mapapi.Model.LatLng
  <init>(DD)V = .ctor(double, double)
  <init>(Landroid/os/Parcel;)V = .ctor(Android.OS.Parcel)
  CREATOR = Creator
  latitude = Latitude
  latitudeE6 = LatitudeE6
  longitude = Longitude
  longitudeE6 = LongitudeE6
  describeContents()I = DescribeContents()
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/baidu/mapapi/model/LatLngBounds = Com.Baidu.Mapapi.Model.LatLngBounds
  <init>(Landroid/os/Parcel;)V = .ctor(Android.OS.Parcel)
  CREATOR = Creator
  northeast = Northeast
  southwest = Southwest
  getCenter()Lcom/baidu/mapapi/model/LatLng; = Center
  contains(Lcom/baidu/mapapi/model/LatLng;)Z = Contains(Com.Baidu.Mapapi.Model.LatLng)
  describeContents()I = DescribeContents()
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/baidu/mapapi/model/ParcelItem = Com.Baidu.Mapapi.Model.ParcelItem
  <init>()V = .ctor()
  CREATOR = Creator
  getBundle()Landroid/os/Bundle; = Bundle
  setBundle(Landroid/os/Bundle;)V = Bundle
  describeContents()I = DescribeContents()
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/baidu/mapapi/ModuleName = Com.Baidu.Mapapi.ModuleName
  TILE_OVERLAY_MODULE = TileOverlayModule
  valueOf(Ljava/lang/String;)Lcom/baidu/mapapi/ModuleName; = ValueOf(string)
  values()[Lcom/baidu/mapapi/ModuleName; = Values()
com/baidu/mapapi/NetworkUtil = Com.Baidu.Mapapi.NetworkUtil
  <init>()V = .ctor()
  getActiveNetworkInfo(Landroid/content/Context;)Landroid/net/NetworkInfo; = GetActiveNetworkInfo(Android.Content.Context)
  getCurrentNetMode(Landroid/content/Context;)Ljava/lang/String; = GetCurrentNetMode(Android.Content.Context)
  initConnectState()Z = InitConnectState()
  isWifiConnected(Landroid/net/NetworkInfo;)Z = IsWifiConnected(Android.Net.NetworkInfo)
  updateNetworkProxy(Landroid/content/Context;)V = UpdateNetworkProxy(Android.Content.Context)
com/baidu/mapapi/OpenLogUtil = Com.Baidu.Mapapi.OpenLogUtil
  <init>()V = .ctor()
  setModuleLogEnable(Lcom/baidu/mapapi/ModuleName;Z)V = SetModuleLogEnable(Com.Baidu.Mapapi.ModuleName, bool)
com/baidu/mapapi/SDKInitializer = Com.Baidu.Mapapi.SDKInitializer
  SDK_BROADCAST_ACTION_STRING_NETWORK_ERROR = SdkBroadcastActionStringNetworkError
  SDK_BROADTCAST_ACTION_STRING_PERMISSION_CHECK_ERROR = SdkBroadtcastActionStringPermissionCheckError
  SDK_BROADTCAST_ACTION_STRING_PERMISSION_CHECK_OK = SdkBroadtcastActionStringPermissionCheckOk
  SDK_BROADTCAST_INTENT_EXTRA_INFO_KEY_ERROR_CODE = SdkBroadtcastIntentExtraInfoKeyErrorCode
  initialize(Landroid/content/Context;)V = Initialize(Android.Content.Context)
  initialize(Ljava/lang/String;Landroid/content/Context;)V = Initialize(string, Android.Content.Context)
com/baidu/mapapi/UIMsg = Com.Baidu.Mapapi.UIMsg
  <init>()V = .ctor()
  UI_TIP_AR_ENTERING = UiTipArEntering
  UI_TIP_FAVORITE_OFF = UiTipFavoriteOff
  UI_TIP_FAVORITE_ON = UiTipFavoriteOn
  UI_TIP_FRIEND_OFF = UiTipFriendOff
  UI_TIP_FRIEND_ON = UiTipFriendOn
  UI_TIP_GEO_ERROR = UiTipGeoError
  UI_TIP_GOALS_FAILURE = UiTipGoalsFailure
  UI_TIP_GOALS_INVALID = UiTipGoalsInvalid
  UI_TIP_HIDE_TO_FRIEND = UiTipHideToFriend
  UI_TIP_INDOOR_NO_GPS = UiTipIndoorNoGps
  UI_TIP_INDOOR_NOT_IN_BUILDING = UiTipIndoorNotInBuilding
  UI_TIP_INPUT_GOALS = UiTipInputGoals
  UI_TIP_INPUT_START = UiTipInputStart
  UI_TIP_INPUT_START_EQUALS_GOAL = UiTipInputStartEqualsGoal
  UI_TIP_LOCATION = UiTipLocation
  UI_TIP_LOCATION_CHANGE = UiTipLocationChange
  UI_TIP_LOCATION_ERROR = UiTipLocationError
  UI_TIP_MAX_SCALE = UiTipMaxScale
  UI_TIP_MIN_SCALE = UiTipMinScale
  UI_TIP_NET_CORE_MEMORY_ALLOCATE_ERROR = UiTipNetCoreMemoryAllocateError
  UI_TIP_NET_CORE_TRANS_CODE_ERROR = UiTipNetCoreTransCodeError
  UI_TIP_NET_NETWORK_CONNECT_ERROR = UiTipNetNetworkConnectError
  UI_TIP_NET_NETWORK_DATA_ERROR = UiTipNetNetworkDataError
  UI_TIP_NET_NETWORK_ERROR_404 = UiTipNetNetworkError404
  UI_TIP_NET_NETWORK_GET_CITYID_ERROR = UiTipNetNetworkGetCityidError
  UI_TIP_NET_NETWORK_TIMEOUT_ERROR = UiTipNetNetworkTimeoutError
  UI_TIP_NET_RESULT_NOT_FOUND = UiTipNetResultNotFound
  UI_TIP_NET_RP_NOT_SUPPORT_BUS = UiTipNetRpNotSupportBus
  UI_TIP_NET_RP_NOT_SUPPORT_BUS_2CITY = UiTipNetRpNotSupportBus2city
  UI_TIP_NET_RP_ST_EN_TOO_NEAR = UiTipNetRpStEnTooNear
  UI_TIP_NET_UNDEFINED_ERROR = UiTipNetUndefinedError
  UI_TIP_NET_USER_CANCEL = UiTipNetUserCancel
  UI_TIP_NEW_VERSION = UiTipNewVersion
  UI_TIP_POI_SEARCH_ERROR = UiTipPoiSearchError
  UI_TIP_SATELLITE_NO = UiTipSatelliteNo
  UI_TIP_SATELLITE_OFF = UiTipSatelliteOff
  UI_TIP_SATELLITE_ON = UiTipSatelliteOn
  UI_TIP_SDCARD_NO_SPACE = UiTipSdcardNoSpace
  UI_TIP_SEARCHING = UiTipSearching
  UI_TIP_SHOW_TO_FRIEND = UiTipShowToFriend
  UI_TIP_START_FAILURE = UiTipStartFailure
  UI_TIP_START_INVALID = UiTipStartInvalid
  UI_TIP_TRAFFIC_CHINA_NO = UiTipTrafficChinaNo
  UI_TIP_TRAFFIC_NO = UiTipTrafficNo
  UI_TIP_TRAFFIC_OFF = UiTipTrafficOff
  UI_TIP_TRAFFIC_ON = UiTipTrafficOn
  UI_TIP_YOUR_SEARCH_GOALS = UiTipYourSearchGoals
  UI_TIP_YOUR_SEARCH_GOALS_IN_CITY = UiTipYourSearchGoalsInCity
  UI_TIP_YOUR_SEARCH_START = UiTipYourSearchStart
  UI_TIP_YOUR_SEARCH_START_IN_CITY = UiTipYourSearchStartInCity
com/baidu/mapapi/VersionInfo = Com.Baidu.Mapapi.VersionInfo
  <init>()V = .ctor()
  KIT_NAME = KitName
  VERSION_DESC = VersionDesc
  VersionInformation = VersionInformation
  getApiVersion()Ljava/lang/String; = ApiVersion
  getKitName()Ljava/lang/String; = KitName
  getVersionDesc()Ljava/lang/String; = VersionDesc
com/baidu/platform/comapi/commonutils/SysUpdateUtil = Com.Baidu.Platform.Comapi.Commonutils.SysUpdateUtil
  <init>()V = .ctor()
  b = B
  c = C
  d = D
  init()V = Init()
  updateNetworkInfo(Landroid/content/Context;)V = UpdateNetworkInfo(Android.Content.Context)
  updateNetworkProxy(Landroid/content/Context;)V = UpdateNetworkProxy(Android.Content.Context)
  updatePhoneInfo()V = UpdatePhoneInfo()
com/baidu/platform/comapi/favrite/FavSyncPoi = Com.Baidu.Platform.Comapi.Favrite.FavSyncPoi
  <init>()V = .ctor()
  a = A
  b = B
  c = C
  d = D
  e = E
  f = F
  g = G
  h = H
  i = I
  j = J
com/baidu/platform/comapi/location/CoordinateType = Com.Baidu.Platform.Comapi.Location.CoordinateType
  <init>()V = .ctor()
  BD09LL = Bd09ll
  BD09MC = Bd09mc
  GCJ02 = Gcj02
  WGS84 = Wgs84
com/baidu/platform/comapi/map/B = Com.Baidu.Platform.Comapi.Map.B
  a = A
  BField = BField
  c = C
  valueOf(Ljava/lang/String;)Lcom/baidu/platform/comapi/map/B; = ValueOf(string)
  values()[Lcom/baidu/platform/comapi/map/B; = Values()
com/baidu/platform/comapi/map/C = Com.Baidu.Platform.Comapi.Map.C
  <init>()V = .ctor()
  a(Z)Lcom/baidu/platform/comapi/map/C; = A(bool)
  a(Lcom/baidu/platform/comapi/map/E;)Lcom/baidu/platform/comapi/map/C; = A(Com.Baidu.Platform.Comapi.Map.E)
  a(I)Lcom/baidu/platform/comapi/map/C; = A(int)
  b(Z)Lcom/baidu/platform/comapi/map/C; = B(bool)
  d(Z)Lcom/baidu/platform/comapi/map/C; = D(bool)
  e(Z)Lcom/baidu/platform/comapi/map/C; = E(bool)
  c(Z)Lcom/baidu/platform/comapi/map/C; = InvokeC(bool)
com/baidu/platform/comapi/map/D = Com.Baidu.Platform.Comapi.Map.D
  a = A
  b = B
  valueOf(Ljava/lang/String;)Lcom/baidu/platform/comapi/map/D; = ValueOf(string)
  values()[Lcom/baidu/platform/comapi/map/D; = Values()
com/baidu/platform/comapi/map/E = Com.Baidu.Platform.Comapi.Map.E
  <init>()V = .ctor()
  a = A
  b = B
  c = C
  d = D
  EField = EField
  f = F
  g = G
  h = H
  i = I
  j = J
  l = L
  m = M
  n = N
  o = O
  p = P
  q = Q
  r = R
  s = S
  a(Landroid/os/Bundle;)V = A(Android.OS.Bundle)
com/baidu/platform/comapi/map/F = Com.Baidu.Platform.Comapi.Map.F
  <init>(Landroid/content/Context;Lcom/baidu/platform/comapi/map/C;Ljava/lang/String;)V = .ctor(Android.Content.Context, Com.Baidu.Platform.Comapi.Map.C, string)
  a = A
  b = B
  a()I = A()
  a(Ljava/lang/String;Landroid/graphics/Rect;)V = A(string, Android.Graphics.Rect)
  c()V = C()
  d()V = D()
  e()V = E()
  onDoubleTap(Landroid/view/MotionEvent;)Z = OnDoubleTap(Android.Views.MotionEvent)
  onDoubleTapEvent(Landroid/view/MotionEvent;)Z = OnDoubleTapEvent(Android.Views.MotionEvent)
  onDown(Landroid/view/MotionEvent;)Z = OnDown(Android.Views.MotionEvent)
  onFling(Landroid/view/MotionEvent;Landroid/view/MotionEvent;FF)Z = OnFling(Android.Views.MotionEvent, Android.Views.MotionEvent, float, float)
  onLongPress(Landroid/view/MotionEvent;)V = OnLongPress(Android.Views.MotionEvent)
  onScroll(Landroid/view/MotionEvent;Landroid/view/MotionEvent;FF)Z = OnScroll(Android.Views.MotionEvent, Android.Views.MotionEvent, float, float)
  onShowPress(Landroid/view/MotionEvent;)V = OnShowPress(Android.Views.MotionEvent)
  onSingleTapConfirmed(Landroid/view/MotionEvent;)Z = OnSingleTapConfirmed(Android.Views.MotionEvent)
  onSingleTapUp(Landroid/view/MotionEvent;)Z = OnSingleTapUp(Android.Views.MotionEvent)
  onSurfaceTextureAvailable(Landroid/graphics/SurfaceTexture;II)V = OnSurfaceTextureAvailable(Android.Graphics.SurfaceTexture, int, int)
  onSurfaceTextureDestroyed(Landroid/graphics/SurfaceTexture;)Z = OnSurfaceTextureDestroyed(Android.Graphics.SurfaceTexture)
  onSurfaceTextureSizeChanged(Landroid/graphics/SurfaceTexture;II)V = OnSurfaceTextureSizeChanged(Android.Graphics.SurfaceTexture, int, int)
  onSurfaceTextureUpdated(Landroid/graphics/SurfaceTexture;)V = OnSurfaceTextureUpdated(Android.Graphics.SurfaceTexture)
com/baidu/platform/comapi/map/I = Com.Baidu.Platform.Comapi.Map.I
  a(Lcom/baidu/mapapi/model/inner/GeoPoint;)Landroid/graphics/Point; = A(Com.Baidu.Mapapi.Model.Inner.GeoPoint)
  a(II)Lcom/baidu/mapapi/model/inner/GeoPoint; = A(int, int)
com/baidu/platform/comapi/map/L = Com.Baidu.Platform.Comapi.Map.IL
  a(IIILandroid/content/Context;)Landroid/os/Bundle; = A(int, int, int, Android.Content.Context)
com/baidu/platform/comapi/map/MapRenderer = Com.Baidu.Platform.Comapi.Map.MapRenderer
  a = A
  b = B
  c = C
  a(J)V = A(long)
  nativeInit(J)V = NativeInit(long)
  nativeRender(J)I = NativeRender(long)
  nativeResize(JII)V = NativeResize(long, int, int)
  onDrawFrame(Ljavax/microedition/khronos/opengles/GL10;)V = OnDrawFrame(Javax.Microedition.Khronos.Opengles.IGL10)
  onSurfaceChanged(Ljavax/microedition/khronos/opengles/GL10;II)V = OnSurfaceChanged(Javax.Microedition.Khronos.Opengles.IGL10, int, int)
  onSurfaceCreated(Ljavax/microedition/khronos/opengles/GL10;Ljavax/microedition/khronos/egl/EGLConfig;)V = OnSurfaceCreated(Javax.Microedition.Khronos.Opengles.IGL10, Javax.Microedition.Khronos.Egl.EGLConfig)
com/baidu/platform/comapi/map/MessageCenter = Com.Baidu.Platform.Comapi.Map.MessageCenter
  <init>()V = .ctor()
  registMessage(ILandroid/os/Handler;)V = RegistMessage(int, Android.OS.Handler)
  unregistMessage(ILandroid/os/Handler;)V = UnregistMessage(int, Android.OS.Handler)
com/baidu/platform/comapi/map/N = Com.Baidu.Platform.Comapi.Map.N
  <init>(Landroid/content/Context;)V = .ctor(Android.Content.Context)
  <init>(Landroid/content/Context;Z)V = .ctor(Android.Content.Context, bool)
  a()Z = A()
  a(Landroid/view/View$OnClickListener;)V = A(Android.Views.View.IOnClickListener)
  a(Z)V = A(bool)
  b()V = B()
  b(Landroid/view/View$OnClickListener;)V = B(Android.Views.View.IOnClickListener)
  b(Z)V = B(bool)
  onTouch(Landroid/view/View;Landroid/view/MotionEvent;)Z = OnTouch(Android.Views.View, Android.Views.MotionEvent)
com/baidu/platform/comapi/map/VersionInfo = Com.Baidu.Platform.Comapi.Map.VersionInfo
  <init>()V = .ctor()
  KIT_NAME = KitName
  VERSION_DESC = VersionDesc
  getApiVersion()Ljava/lang/String; = ApiVersion
  getKitName()Ljava/lang/String; = KitName
  getVersionDesc()Ljava/lang/String; = VersionDesc
com/baidu/platform/comapi/NativeLoader = Com.Baidu.Platform.Comapi.NativeLoader
  getCodePath()Ljava/lang/String; = CodePath
  getCustomizeNativePath()Ljava/lang/String; = CustomizeNativePath
  getInstance()Lcom/baidu/platform/comapi/NativeLoader; = Instance
  copyStream(Ljava/io/InputStream;Ljava/io/FileOutputStream;)V = CopyStream(System.IO.Stream, System.IO.Stream)
  loadCustomizeNativeLibrary(Ljava/lang/String;)Z = LoadCustomizeNativeLibrary(string)
  loadLibrary(Ljava/lang/String;)Z = LoadLibrary(string)
  setContext(Landroid/content/Context;)V = SetContext(Android.Content.Context)
com/baidu/platform/comapi/util/PermissionCheck = Com.Baidu.Platform.Comapi.Util.PermissionCheck
  <init>()V = .ctor()
  destory()V = Destory()
  init(Landroid/content/Context;)V = Init(Android.Content.Context)
  permissionCheck()I = InvokePermissionCheck()
com/baidu/platform/comapi/util/SysUpdateObservable = Com.Baidu.Platform.Comapi.Util.SysUpdateObservable
  getInstance()Lcom/baidu/platform/comapi/util/SysUpdateObservable; = Instance
  addObserver(Lcom/baidu/platform/comapi/util/SysUpdateObserver;)V = AddObserver(Com.Baidu.Platform.Comapi.Util.ISysUpdateObserver)
  init()V = Init()
  updateNetworkInfo(Landroid/content/Context;)V = UpdateNetworkInfo(Android.Content.Context)
  updateNetworkProxy(Landroid/content/Context;)V = UpdateNetworkProxy(Android.Content.Context)
  updatePhoneInfo()V = UpdatePhoneInfo()
com/baidu/platform/comapi/util/SysUpdateObserver = Com.Baidu.Platform.Comapi.Util.ISysUpdateObserver
  init()V = Init()
  updateNetworkInfo(Landroid/content/Context;)V = UpdateNetworkInfo(Android.Content.Context)
  updateNetworkProxy(Landroid/content/Context;)V = UpdateNetworkProxy(Android.Content.Context)
  updatePhoneInfo()V = UpdatePhoneInfo()
com/baidu/platform/comjni/engine/AppEngine = Com.Baidu.Platform.Comjni.Engine.AppEngine
  <init>()V = .ctor()
  despatchMessage(IIIJ)V = DespatchMessage(int, int, int, long)
  InitClass()V = InitClass()
  InitEngine(Landroid/content/Context;)Z = InitEngine(Android.Content.Context)
  SetProxyInfo(Ljava/lang/String;I)V = SetProxyInfo(string, int)
  StartSocketProc()Z = StartSocketProc()
  UnInitEngine()Z = UnInitEngine()
com/baidu/platform/comjni/engine/JNIEngine = Com.Baidu.Platform.Comjni.Engine.JNIEngine
  initClass(Ljava/lang/Object;I)I = InitClass(Java.Lang.Object, int)
  InitEngine(Landroid/content/Context;)Z = InitEngine(Android.Content.Context)
  SetProxyInfo(Ljava/lang/String;I)V = SetProxyInfo(string, int)
  StartSocketProc()Z = StartSocketProc()
  UnInitEngine()Z = UnInitEngine()
com/baidu/platform/comjni/map/basemap/BaseMapCallback = Com.Baidu.Platform.Comjni.Map.Basemap.BaseMapCallback
  <init>()V = .ctor()
  removeLayerDataInterface(J)V = RemoveLayerDataInterface(long)
  ReqLayerData(Landroid/os/Bundle;JILandroid/os/Bundle;)I = ReqLayerData(Android.OS.Bundle, long, int, Android.OS.Bundle)
com/baidu/platform/comjni/map/basemap/JNIBaseMap = Com.Baidu.Platform.Comjni.Map.Basemap.JNIBaseMap
  <init>()V = .ctor()
  a = A
  AddLayer(JIILjava/lang/String;)J = AddLayer(long, int, int, string)
  addOneOverlayItem(JLandroid/os/Bundle;)V = AddOneOverlayItem(long, Android.OS.Bundle)
  addOverlayItems(J[Landroid/os/Bundle;I)V = AddOverlayItems(long, Android.OS.Bundle[], int)
  addtileOverlay(JLandroid/os/Bundle;)Z = AddtileOverlay(long, Android.OS.Bundle)
  cleanSDKTileDataCache(JJ)Z = CleanSDKTileDataCache(long, long)
  clearHeatMapLayerCache(J)V = ClearHeatMapLayerCache(long)
  ClearLayer(JJ)V = ClearLayer(long, long)
  Create()J = Create()
  CreateDuplicate(J)J = CreateDuplicate(long)
  enableDrawHouseHeight(JZ)V = EnableDrawHouseHeight(long, bool)
  GeoPtToScrPoint(JII)Ljava/lang/String; = GeoPtToScrPoint(long, int, int)
  GetBaiduHotMapCityInfo(J)Z = GetBaiduHotMapCityInfo(long)
  getCompassPosition(JJ)Ljava/lang/String; = GetCompassPosition(long, long)
  getDrawingMapStatus(J)Landroid/os/Bundle; = GetDrawingMapStatus(long)
  getfocusedBaseIndoorMapInfo(J)Ljava/lang/String; = GetfocusedBaseIndoorMapInfo(long)
  GetMapStatus(J)Landroid/os/Bundle; = GetMapStatus(long)
  getMapStatusLimits(J)Landroid/os/Bundle; = GetMapStatusLimits(long)
  GetNearlyObjID(JJIII)Ljava/lang/String; = GetNearlyObjID(long, long, int, int, int)
  GetScreenBuf(J[III)[I = GetScreenBuf(long, int[], int, int)
  GetZoomToBound(JLandroid/os/Bundle;)F = GetZoomToBound(long, Android.OS.Bundle)
  IsBaseIndoorMapMode(J)Z = IsBaseIndoorMapMode(long)
  isDrawHouseHeightEnable(J)Z = IsDrawHouseHeightEnable(long)
  LayersIsShow(JJ)Z = LayersIsShow(long, long)
  MapProc(JIII)I = MapProc(long, int, int, int)
  OnBackground(J)V = OnBackground(long)
  OnForeground(J)V = OnForeground(long)
  OnHotcityGet(J)Ljava/lang/String; = OnHotcityGet(long)
  OnPause(J)V = OnPause(long)
  OnRecordAdd(JI)Z = OnRecordAdd(long, int)
  OnRecordGetAll(J)Ljava/lang/String; = OnRecordGetAll(long)
  OnRecordGetAt(JI)Ljava/lang/String; = OnRecordGetAt(long, int)
  OnRecordImport(JZZ)Z = OnRecordImport(long, bool, bool)
  OnRecordReload(JIZ)Z = OnRecordReload(long, int, bool)
  OnRecordRemove(JIZ)Z = OnRecordRemove(long, int, bool)
  OnRecordStart(JIZI)Z = OnRecordStart(long, int, bool, int)
  OnRecordSuspend(JIZI)Z = OnRecordSuspend(long, int, bool, int)
  OnResume(J)V = OnResume(long)
  OnSchcityGet(JLjava/lang/String;)Ljava/lang/String; = OnSchcityGet(long, string)
  PostStatInfo(J)V = PostStatInfo(long)
  Release(J)I = Release(long)
  removeOneOverlayItem(JLandroid/os/Bundle;)V = RemoveOneOverlayItem(long, Android.OS.Bundle)
  ResetImageRes(J)V = ResetImageRes(long)
  SaveScreenToLocal(JLjava/lang/String;Landroid/os/Bundle;)V = SaveScreenToLocal(long, string, Android.OS.Bundle)
  ScrPtToGeoPoint(JII)Ljava/lang/String; = ScrPtToGeoPoint(long, int, int)
  SetCallback(JLcom/baidu/platform/comjni/map/basemap/BaseMapCallback;)I = SetCallback(long, Com.Baidu.Platform.Comjni.Map.Basemap.BaseMapCallback)
  SetMapControlMode(JI)I = SetMapControlMode(long, int)
  SetMapCustomEnable(JZ)V = SetMapCustomEnable(long, bool)
  SetMapStatus(JLandroid/os/Bundle;)V = SetMapStatus(long, Android.OS.Bundle)
  setMapStatusLimits(JLandroid/os/Bundle;)V = SetMapStatusLimits(long, Android.OS.Bundle)
  ShowBaseIndoorMap(JZ)V = ShowBaseIndoorMap(long, bool)
  ShowHotMap(JZ)V = ShowHotMap(long, bool)
  ShowLayers(JJZ)V = ShowLayers(long, long, bool)
  ShowSatelliteMap(JZ)V = ShowSatelliteMap(long, bool)
  ShowTrafficMap(JZ)V = ShowTrafficMap(long, bool)
  SwitchBaseIndoorMapFloor(JLjava/lang/String;Ljava/lang/String;)Z = SwitchBaseIndoorMapFloor(long, string, string)
  UpdateLayers(JJ)V = UpdateLayers(long, long)
  updateOneOverlayItem(JLandroid/os/Bundle;)V = UpdateOneOverlayItem(long, Android.OS.Bundle)
  updateSDKTile(JLandroid/os/Bundle;)Z = UpdateSDKTile(long, Android.OS.Bundle)
com/baidu/platform/comjni/map/commonmemcache/JNICommonMemCache = Com.Baidu.Platform.Comjni.Map.Commonmemcache.JNICommonMemCache
  <init>()V = .ctor()
  Create()J = Create()
  Init(J)V = Init(long)
com/baidu/platform/comjni/map/favorite/JNIFavorite = Com.Baidu.Platform.Comjni.Map.Favorite.JNIFavorite
  <init>()V = .ctor()
  Add(JLjava/lang/String;Ljava/lang/String;)Z = Add(long, string, string)
  Clear(J)Z = Clear(long)
  Create()J = Create()
  GetAll(JLandroid/os/Bundle;)I = GetAll(long, Android.OS.Bundle)
  GetValue(JLjava/lang/String;)Ljava/lang/String; = GetValue(long, string)
  IsExist(JLjava/lang/String;)Z = IsExist(long, string)
  Load(JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;III)Z = Load(long, string, string, string, int, int, int)
  Release(J)I = Release(long)
  Remove(JLjava/lang/String;)Z = Remove(long, string)
  SaveCache(J)Z = SaveCache(long)
  SetType(JI)Z = SetType(long, int)
  Update(JLjava/lang/String;Ljava/lang/String;)Z = Update(long, string, string)
com/baidu/platform/comjni/tools/BundleKeySet = Com.Baidu.Platform.Comjni.Tools.BundleKeySet
  <init>()V = .ctor()
  getBundleKeys(Landroid/os/Bundle;)[Ljava/lang/String; = GetBundleKeys(Android.OS.Bundle)
com/baidu/platform/comjni/tools/JNITools = Com.Baidu.Platform.Comjni.Tools.JNITools
  GetToken()Ljava/lang/String; = Token
  CoordinateEncryptEx(FFLjava/lang/String;Ljava/lang/Object;)Z = CoordinateEncryptEx(float, float, string, Java.Lang.Object)
  CoordinateEncryptMc(FFLjava/lang/Object;)Z = CoordinateEncryptMc(float, float, Java.Lang.Object)
  GetDistanceByMC(Ljava/lang/Object;)V = GetDistanceByMC(Java.Lang.Object)
  initClass(Ljava/lang/Object;I)I = InitClass(Java.Lang.Object, int)
  openLogEnable(ZI)V = OpenLogEnable(bool, int)
  TransGeoStr2ComplexPt(Ljava/lang/Object;)Z = TransGeoStr2ComplexPt(Java.Lang.Object)
  TransGeoStr2Pt(Ljava/lang/Object;)Z = TransGeoStr2Pt(Java.Lang.Object)
  TransNodeStr2Pt(Ljava/lang/Object;)V = TransNodeStr2Pt(Java.Lang.Object)
com/baidu/platform/comjni/tools/ParcelItem = Com.Baidu.Platform.Comjni.Tools.ParcelItem
  <init>()V = .ctor()
  CREATOR = Creator
  getBundle()Landroid/os/Bundle; = Bundle
  setBundle(Landroid/os/Bundle;)V = Bundle
  describeContents()I = DescribeContents()
  writeToParcel(Landroid/os/Parcel;I)V = WriteToParcel(Android.OS.Parcel, Android.OS.ParcelableWriteFlags)
com/baidu/platform/comjni/util/AppMD5 = Com.Baidu.Platform.Comjni.Util.AppMD5
  <init>()V = .ctor()
  encodeUrlParamsValue(Ljava/lang/String;)Ljava/lang/String; = EncodeUrlParamsValue(string)
  getSignMD5String(Ljava/lang/String;)Ljava/lang/String; = GetSignMD5String(string)
com/baidu/platform/comjni/util/JNIMD5 = Com.Baidu.Platform.Comjni.Util.JNIMD5
  encodeUrlParamsValue(Ljava/lang/String;)Ljava/lang/String; = EncodeUrlParamsValue(string)
  getSignMD5String(Ljava/lang/String;)Ljava/lang/String; = GetSignMD5String(string)
com/baidu/platform/comjni/util/JNISysOSAPI = Com.Baidu.Platform.Comjni.Util.JNISysOSAPI
  create()V = Create()
  init(Ljava/lang/Object;)V = Init(Java.Lang.Object)
com/baidu/vi/VDeviceAPI = Com.Baidu.VI.VDeviceAPI
  <init>()V = .ctor()
  getAppVersion()Ljava/lang/String; = AppVersion
  getAvailableMemory()J = AvailableMemory
  getCachePath()Ljava/lang/String; = CachePath
  getCellId()Ljava/lang/String; = CellId
  getCurrentNetworkType()I = CurrentNetworkType
  getFreeSpace()J = FreeSpace
  getImei()Ljava/lang/String; = Imei
  getImsi()Ljava/lang/String; = Imsi
  isWifiConnected()Z = IsWifiConnected
  getLac()Ljava/lang/String; = Lac
  getModuleFileName()Ljava/lang/String; = ModuleFileName
  getOsVersion()Ljava/lang/String; = OsVersion
  getScreenBrightness()I = ScreenBrightness
  getScreenDensity()F = ScreenDensity
  getScreenDensityDpi()I = ScreenDensityDpi
  getSdcardFreeSpace()J = SdcardFreeSpace
  getSdcardPath()Ljava/lang/String; = SdcardPath
  getSdcardTotalSpace()J = SdcardTotalSpace
  getSystemMetricsX()F = SystemMetricsX
  getSystemMetricsY()F = SystemMetricsY
  getTotalMemory()J = TotalMemory
  getTotalSpace()J = TotalSpace
  getWifiHotpot()[Landroid/net/wifi/ScanResult; = GetWifiHotpot()
  makeCall(Ljava/lang/String;)V = MakeCall(string)
  onNetworkStateChanged()V = OnNetworkStateChanged()
  openUrl(Ljava/lang/String;)V = OpenUrl(string)
  sendMMS(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)I = SendMMS(string, string, string, string)
  sendSMS(Ljava/lang/String;Ljava/lang/String;)V = SendSMS(string, string)
  setNetworkChangedCallback()V = SetNetworkChangedCallback()
  setScreenAlwaysOn(Z)V = SetScreenAlwaysOn(bool)
  setupSoftware(Ljava/lang/String;)V = SetupSoftware(string)
  unsetNetworkChangedCallback()V = UnsetNetworkChangedCallback()
com/baidu/vi/VMsg = Com.Baidu.VI.VMsg
  <init>()V = .ctor()
  destroy()V = Destroy()
  init()V = Init()
vi/com/gdi/bgl/android/java/EnvDrawText = VI.Com.Gdi.Bgl.Android.Java.EnvDrawText
  <init>()V = .ctor()
  bBmpChange = BBmpChange
  bmp = Bmp
  buffer = Buffer
  canvasTemp = CanvasTemp
  fontCache = FontCache
  iWordHightMax = IWordHightMax
  iWordWidthMax = IWordWidthMax
  pt = Pt
  drawText(Ljava/lang/String;II[IIIII)[I = DrawText(string, int, int, int[], int, int, int, int)
  getTextSize(Ljava/lang/String;II)[S = GetTextSize(string, int, int)
  registFontCache(ILandroid/graphics/Typeface;)V = RegistFontCache(int, Android.Graphics.Typeface)
  removeFontCache(I)V = RemoveFontCache(int)
